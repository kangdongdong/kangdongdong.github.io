<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://kiedeng.github.io/"/>
  <updated>2020-02-11T04:56:13.605Z</updated>
  <id>http://kiedeng.github.io/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux使用手册</title>
    <link href="http://kiedeng.github.io/2020/02/10/Linux%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/"/>
    <id>http://kiedeng.github.io/2020/02/10/Linux%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/</id>
    <published>2020-02-10T08:57:11.000Z</published>
    <updated>2020-02-11T04:56:13.605Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Feb 11 2020 13:53:16 GMT+0800 (GMT+08:00) --><h2 id="用户管理命令"><a href="#用户管理命令" class="headerlink" title="用户管理命令"></a>用户管理命令</h2><blockquote><p><strong>#添加</strong></p><p>useradd kiedeng 或者 useradd -g [组名] 用户名</p><p><strong>#设置密码</strong></p><p>useradd 用户名</p><p><strong>#查看用户是否存在</strong></p><p>id 用户名</p><p><strong>#查看创建的用户</strong></p><p>cat /etc/passwd</p><p><strong>#切换用户</strong></p><p>su 用户名（没有获得环境变量）</p><p>su - 用户名 （获得环境变量）</p><p><strong>#删除用户</strong></p><p>userdel 用户名</p><p>userdel -r 用户名 （用户和用户目录全部删除）</p><p><strong>#设置root权限</strong></p><p>vim /etc/sudoers</p><p>在root下中添加一行</p><p>用户名 ALL=(ALL) ALL</p><p>用户名 ALL=(ALL) NOPASSWDALL （不需要密码）</p><p><strong>修改usermod 修改用户</strong></p><p>usemod -g 用户组 用户名</p></blockquote><h2 id="用户组管理"><a href="#用户组管理" class="headerlink" title="用户组管理"></a>用户组管理</h2><blockquote><p>添加：groupadd 组名</p><p>删除：groupdel 组名</p><p>修改组：groupmod -n 新组名 老组名</p><p>查看组：cat /etc/group</p></blockquote><h2 id="文件权限类"><a href="#文件权限类" class="headerlink" title="文件权限类"></a>文件权限类</h2><blockquote><p>总共10位：0~9</p><p>0位：-表示文件，d代表文件，l代表链接文档</p><p>1-3位确定属主的该文件权限</p><p>4-6位确定属组的该文件的权限</p><p>7-9位确定其他用户改文件的权限</p><p><strong>修改文件权限</strong></p><p>chmod 777 a.txt</p><p>chmod -R 777 xiyou （递归删除）</p><p>改变所有者</p><p>chown [选项] [最终用户] [文件或者目录] 选项为-R （递归操作）</p><p>改变所属组</p><p>chgrp [最终用户组] [文件或者目录]</p></blockquote><h2 id="搜索查找类"><a href="#搜索查找类" class="headerlink" title="搜索查找类"></a>搜索查找类</h2><p><strong>find 查找文件或者目录</strong></p><p>基本语法：find [搜索范围] [选项]</p><blockquote><p>选项</p><p>-name&lt;查询方式&gt; 按照指定文件名查找</p><p>-user&lt;用户名&gt; 指定用户查找</p><p>-size&lt;文件大小&gt; 按照文件大小查找 （+为大于，-为小于）</p><p>比如：find /home -size +20458</p></blockquote><p><strong>locate快速定位文件路径</strong></p><p>更新：updatedb</p><p>基本语法：locate 搜索文件</p><p><strong>grep 过滤查找及“|”管道符</strong></p><p>基本语法：grep 选项 查找内容 源文件</p><h2 id="压缩和解压缩"><a href="#压缩和解压缩" class="headerlink" title="压缩和解压缩"></a>压缩和解压缩</h2><p><strong>gzip/gunzip压缩</strong></p><ul><li>只能压缩文件，不能压缩目录</li></ul><p>命令：gzip 文件；gunzip 文件. gz</p><p><strong>zip/unzip压缩</strong></p><p>基本语法：</p><blockquote><p>zip [选项] xxx.zip 将要压缩的内容 （目录或文件）</p><p>unzip [选项] xxx.zip 解压文件</p><p>选项：-d&lt;目录&gt; 指定压缩后文件存放的目录</p></blockquote><p><strong>tar 打包</strong></p><blockquote><p>tar [选项] xxx.tar.gz 将要打包进去的内容</p><p>选项</p><p>-c 产生tar打包文件</p><p>-v 显示详细信息</p><p>-f 指定压缩后的文件名</p><p>-z 打包同时压缩</p><p>-x 解包.tar文件</p></blockquote><p>压缩：tar -zcvf kie.tar.gz a.txt b.txt</p><p>解压：tar -zxvf kie.tar.gz -C /opt</p><h2 id="磁盘分区类"><a href="#磁盘分区类" class="headerlink" title="磁盘分区类"></a>磁盘分区类</h2><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Tue Feb 11 2020 13:53:16 GMT+0800 (GMT+08:00) --&gt;&lt;h2 id=&quot;用户管理命令&quot;&gt;&lt;a href=&quot;#用户管理命令&quot; class=&quot;headerlink&quot; title=&quot;用户管理命令&quot;&gt;&lt;/a&gt;用户管
      
    
    </summary>
    
    
      <category term="使用手册" scheme="http://kiedeng.github.io/categories/%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/"/>
    
    
      <category term="Linux" scheme="http://kiedeng.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>hadoop集群搭建</title>
    <link href="http://kiedeng.github.io/2020/02/10/hadoop%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/"/>
    <id>http://kiedeng.github.io/2020/02/10/hadoop%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/</id>
    <published>2020-02-10T06:11:15.000Z</published>
    <updated>2020-02-10T17:09:23.733Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Feb 11 2020 01:09:45 GMT+0800 (GMT+08:00) --><h2 id="克隆虚拟机"><a href="#克隆虚拟机" class="headerlink" title="克隆虚拟机"></a>克隆虚拟机</h2><ul><li>配置好的Linux虚拟机-&gt; 管理 -&gt; 克隆</li></ul><p><strong>删除网卡，复制物理地址</strong>：vim /etc/udev/rules.d/70-persistent-net.rules</p><blockquote><p>删除eht0的那一行</p><p>将下一行的eth0改为eth1</p><p>复制address物理地址</p></blockquote><p><strong>配置网络：</strong>vim /etc/sysconfig/network-scripts/ifcfg-eth0</p><blockquote><p>HWADDR:粘贴物理地址</p><p>IPADDR=192.168.1.101 设置ip</p><p>ONBOOT=yes<br>NM_CONTROLLED=yes<br>B00TPROTO=static</p><p>GATEWAY=192.168.1.2<br>DNS1=192.168.1.2 和网关一致</p></blockquote><p><strong>修改主机名称：</strong>vim /etc/sysconfig/network</p><blockquote><p>NETWORKING=yes<br>HOSTNAME=hadoopl 01</p></blockquote><p><strong>修改主机映射：</strong>vim /etc/hosts</p><h2 id="安装JDK"><a href="#安装JDK" class="headerlink" title="安装JDK"></a>安装JDK</h2><ol><li><p>通过sftp将jdk放在/opt/software下</p><blockquote><p>tar -zxvf [gz文件名] -C [解压的路径]</p></blockquote></li><li><p>设置环境路径</p><blockquote><p>#JAVA_HOME</p><p>export JAVA_HOME=/opt/module/jdk1.8.0_144</p><p>export PATH=$PATH:$JAVA_HOME/bin</p></blockquote></li><li><p>让修改以后的文件生效</p><blockquote><p>source /etc/profile</p><p>测试是否成功指令</p><p>java -version</p></blockquote></li></ol><h2 id="安装Hadoop"><a href="#安装Hadoop" class="headerlink" title="安装Hadoop"></a>安装Hadoop</h2><ol><li><p>将hadoop-2.7.2.tar.gz传入，解压</p></li><li><p>在/etc/profile添加环境变量</p><blockquote><p>##HADOOP_HOME</p><p>export HADOOP_HOME=/opt/module/hadoop-2.7.2</p><p>export PATH=$PATH:$HADOOP_HOME/bin</p><p>export PATH=$PATH:$HADOOP_HOME/sbin</p></blockquote></li><li><p>生效文件：source /etc/profile</p></li></ol><h2 id="Hadoop的目录结构"><a href="#Hadoop的目录结构" class="headerlink" title="Hadoop的目录结构"></a>Hadoop的目录结构</h2><ol><li>bin目录：存放对Hadoop相关服务（HDFS和YARN）进行操作的脚本</li><li>etc目录：Hadoop的配置目录，存放Hadoop的配置文件</li><li>lib目录：存放Hadoop的本地库（对数据进行压缩解压功能）</li><li>sbin目录：存放启动或者停止Hadoop相关服务的脚本</li><li>share目录：存放hadoop的jar包，官方文档和案例</li></ol><h2 id="Hadoop的运行模式"><a href="#Hadoop的运行模式" class="headerlink" title="Hadoop的运行模式"></a><strong>Hadoop的运行模式</strong></h2><p>​ 本地模式，伪分布式模式，完成分布式模式</p><h3 id="一，本地模式"><a href="#一，本地模式" class="headerlink" title="一，本地模式"></a>一，本地模式</h3><h4 id="官方Grep案例"><a href="#官方Grep案例" class="headerlink" title="官方Grep案例"></a>官方Grep案例</h4><ol><li><p>在hadoop-2.7.2文件下面创建一个input文件夹</p></li><li><p>复制文件到input文件夹里面</p></li><li><p>执行share文件夹下的MapReduce程序</p><blockquote><p>bin/hadoop jar share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.2.jar grep input output ‘dfs[a-z.]+’</p></blockquote></li><li><p>查看输出结果</p><blockquote><p>cat output/*</p></blockquote></li></ol><h4 id="官方WordCount案例（计算单词个数）"><a href="#官方WordCount案例（计算单词个数）" class="headerlink" title="官方WordCount案例（计算单词个数）"></a>官方WordCount案例（计算单词个数）</h4><ol><li><p>创建文件夹（wcinput）</p></li><li><p>在该文件夹创建并编辑文件内容</p></li><li><p>执行</p><blockquote><p>hadoop jar share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.2.jar wordcount wcinput wcoutput</p></blockquote></li><li><p>查看结果</p><blockquote><p>hadoop-2.7.2]$ cat wcoutput/part-r-00000</p></blockquote></li></ol><h3 id="二，伪分布式运行模式"><a href="#二，伪分布式运行模式" class="headerlink" title="二，伪分布式运行模式"></a>二，伪分布式运行模式</h3><h4 id="启动HDFS并运行MapReduce程序"><a href="#启动HDFS并运行MapReduce程序" class="headerlink" title="启动HDFS并运行MapReduce程序"></a>启动HDFS并运行MapReduce程序</h4><ol><li><p>配置集群</p><ul><li><p>hadoop-env.sh(添加jdk路径)</p><blockquote><p>export JAVA_HOME=/opt/module/jdk1.8.0_144</p></blockquote></li><li><p>core-site.xml</p><blockquote><property><p><name>fs.defaultFS</name></p><p><value>hdfs://hadoop101:9000</value></p></property><property><p><name>hadoop.tmp.dir</name></p><p><value>/opt/module/hadoop-2.7.2/data/tmp</value></p></property></blockquote></li><li><p>hdfs-site.xml</p><blockquote><property><p><name>dfs.replication</name></p><p><value>1</value></p></property></blockquote></li></ul></li><li><p>启动集群</p><ul><li><p>格式化NameNode（第一次启动时格式化，以后就不要格式化</p><blockquote><p>bin/hdfs namenode -format</p></blockquote></li><li><p>启动NameNode</p><blockquote><p>sbin/hadoop-daemon.sh start namenode</p></blockquote></li><li><p>启动DataNode</p><blockquote><p>sbin/hadoop-daemon.sh start datanode</p></blockquote></li></ul></li><li><p>查看集群</p><ul><li><p>web访问默认端口：50070</p></li><li><p>打开失败：<a href="https://www.cnblogs.com/zlslch/p/6604189.html" target="_blank" rel="noopener">https://www.cnblogs.com/zlslch/p/6604189.html</a></p></li><li><p>log日志：/opt/module/hadoop-2.7.2/logs</p></li><li><p>不能一直格式化NameNode原因</p><blockquote><p>会产生新的集群id，导致NameNode和DataNode的集群id不一致，集群找不到数据，所以格式化前先删除data和log日志</p></blockquote></li></ul></li><li><p>操作集群</p><ul><li>（wordcount）执行操作和本地模式一样</li></ul></li></ol><h4 id="启动YARN并运行MapReduce程序"><a href="#启动YARN并运行MapReduce程序" class="headerlink" title="启动YARN并运行MapReduce程序"></a>启动YARN并运行MapReduce程序</h4><ol><li><p>配置集群</p><ul><li><p>yarn-env.sh(添加路径)</p><blockquote><p>export JAVA_HOME=/opt/module/jdk1.8.0_144</p></blockquote></li><li><p>配置yarn-site.xml</p><blockquote><property><p><name>yarn.nodemanager.aux-services</name></p><p><value>mapreduce_shuffle</value></p></property><property><p><name>yarn.resourcemanager.hostname</name></p><p><value>hadoop101</value></p></property></blockquote></li><li><p>mapred-env.sh(添加jdk路径)</p></li><li><p>(对mapred-site.xml.template重新命名为) mapred-site.xml</p><blockquote><property><p><name>mapreduce.framework.name</name></p><p><value>yarn</value></p></property></blockquote></li></ul></li><li><p>启动集群</p><ol><li><p>启动前必须先启动NameNode和DataNode</p></li><li><p>启动ResourceManager</p><blockquote><p>sbin/yarn-daemon.sh start resourcemanager</p></blockquote></li><li><p>启动NodeManager</p><blockquote><p>sbin/yarn-daemon.sh start nodemanager</p></blockquote></li></ol></li><li><p>集群操作</p><ol><li><p>yarn访问端口：8088</p></li><li><p>删除文件系统的ouput文件</p><blockquote><p>bin/hdfs dfs -rm -R /user/kiedong/output</p></blockquote></li><li><p>执行MapReduce程序</p><blockquote><p>bin/hadoop jar share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.2.jar wordcount /user/atguigu/input /user/atguigu/output</p></blockquote></li></ol></li></ol><h4 id="配置历史服务器"><a href="#配置历史服务器" class="headerlink" title="配置历史服务器"></a>配置历史服务器</h4><ul><li><p>配置mapred-site.xml,添加</p><blockquote><property><p><name>mapreduce.jobhistory.address</name></p><p><value>hadoop101:10020</value></p></property><property><p><name>mapreduce.jobhistory.webapp.address</name></p><p><value>hadoop101:19888</value></p></property></blockquote></li><li><p>启动历史服务器</p><blockquote><p>sbin/mr-jobhistory-daemon.sh start historyserver</p></blockquote></li><li><p>端口：19888</p></li></ul><h4 id="配置日志的聚集"><a href="#配置日志的聚集" class="headerlink" title="配置日志的聚集"></a>配置日志的聚集</h4><p>日志聚集的概念：应用程序运行完成以后，程序运行日志上传到HDFS系统上</p><p>日志聚集的好处：方便开发调试</p><p><strong>注意</strong>：开启此功能，需要重新启动NodeManager，ResourceManager和HistoryManager</p><ul><li><p>yarn-site.xml</p><blockquote><property><p><name>yarn.log-aggregation-enable</name></p><p><value>true</value></p></property><property><p><name>yarn.log-aggregation.retain-seconds</name></p><p><value>604800</value></p></property></blockquote></li><li><p>关闭,然后NodeManager 、ResourceManager和HistoryManager</p></li><li><p>执行WordCount案例</p></li><li><p>查看日志端口：19888</p></li></ul><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Tue Feb 11 2020 01:09:45 GMT+0800 (GMT+08:00) --&gt;&lt;h2 id=&quot;克隆虚拟机&quot;&gt;&lt;a href=&quot;#克隆虚拟机&quot; class=&quot;headerlink&quot; title=&quot;克隆虚拟机&quot;&gt;&lt;/a&gt;克隆虚拟机&lt;
      
    
    </summary>
    
    
      <category term="部署" scheme="http://kiedeng.github.io/categories/%E9%83%A8%E7%BD%B2/"/>
    
    
      <category term="Hadoop" scheme="http://kiedeng.github.io/tags/Hadoop/"/>
    
      <category term="大数据" scheme="http://kiedeng.github.io/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
  </entry>
  
  <entry>
    <title>Linux安装与配置</title>
    <link href="http://kiedeng.github.io/2020/02/10/Linux%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
    <id>http://kiedeng.github.io/2020/02/10/Linux%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</id>
    <published>2020-02-10T05:35:12.000Z</published>
    <updated>2020-02-11T02:47:13.265Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Feb 11 2020 13:53:16 GMT+0800 (GMT+08:00) --><h3 id="安装时注意事项-用VMware安装centos-大数据虚拟机"><a href="#安装时注意事项-用VMware安装centos-大数据虚拟机" class="headerlink" title="安装时注意事项(用VMware安装centos[大数据虚拟机])"></a>安装时注意事项(用VMware安装centos[大数据虚拟机])</h3><ol><li><p>检查BIOS虚拟化支持</p></li><li><p>内存默认设置为2048MB</p></li><li><p>最大磁盘大小默认为20GB</p></li><li><p>是否对CD媒体进行测试，<strong>直接跳过Skip</strong></p></li><li><p>创建自定义分区(都是标准分区)</p><blockquote><p>boot 默认： 100MB</p><p>wap 默认：2048MB</p><p>/ 默认：15360</p></blockquote></li><li><p>自定义系统软件</p><blockquote><p>基本系统：兼容程序库；基本</p><p>应用程序：互联网浏览器</p><p>桌面：除了KDE,其余都选</p><p>语言支持：中文支持</p></blockquote></li><li><p>Kdump去掉</p></li></ol><h3 id="查看网络IP和网关"><a href="#查看网络IP和网关" class="headerlink" title="查看网络IP和网关"></a>查看网络IP和网关</h3><p>编辑 -&gt; 虚拟网络编辑器 -&gt; NAT模式 即可看到子网IP</p><p>NET设置可以看到网关</p><h3 id="设置IP"><a href="#设置IP" class="headerlink" title="设置IP"></a>设置IP</h3><h4 id="自动获取"><a href="#自动获取" class="headerlink" title="自动获取"></a>自动获取</h4><p>登录后，通过界面来设置自动获取</p><h4 id="指定固定ip"><a href="#指定固定ip" class="headerlink" title="指定固定ip"></a>指定固定ip</h4><p>​ 直接修改配置文件来指定IP,并可以连接到外网(程序员推荐)，编辑 vi /etc/sysconfig/network-scripts/ifcfg-eth0<br>​ 要求：将ip地址配置的静态的，ip地址为192.168.xxx.xxx</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">DEVICE&#x3D;eth0                #接口名（设备,网卡）</span><br><span class="line">HWADDR&#x3D;00:0C:2x:6x:0x:xx   #MAC地址 </span><br><span class="line">TYPE&#x3D;Ethernet               #网络类型（通常是Ethemet）</span><br><span class="line">UUID&#x3D;926a57ba-92c6-4231-bacb-f27e5e6a9f44  #随机id</span><br><span class="line">#系统启动的时候网络接口是否有效（yes&#x2F;no）</span><br><span class="line">ONBOOT&#x3D;yes                </span><br><span class="line"># IP的配置方法[none|static|bootp|dhcp]（引导时不使用协议|静态分配IP|BOOTP协议|DHCP协议）</span><br><span class="line">BOOTPROTO&#x3D;static      </span><br><span class="line">#IP地址</span><br><span class="line">IPADDR&#x3D;192.168.189.130  </span><br><span class="line">#网关  </span><br><span class="line">GATEWAY&#x3D;192.168.189.2      </span><br><span class="line">#域名解析器</span><br><span class="line">DNS1&#x3D;192.168.189.2</span><br></pre></td></tr></table></figure><p><strong>重启网络服务或者重启系统生效</strong>：service network restart 、reboot</p><h3 id="修改主机名"><a href="#修改主机名" class="headerlink" title="修改主机名"></a>修改主机名</h3><p>查看当前主机名：hostname</p><p>修改主机名：/etc/hostname</p><p>修改主机映射文件：vim /etc/sysconfig/network</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">NETWORKING&#x3D;yes</span><br><span class="line">NETWORKING_IPV6&#x3D;no</span><br><span class="line">HOSTNAME&#x3D; hadoop &#x2F;&#x2F;写入新的主机名</span><br><span class="line">注意：主机名称不要有“_”下划线</span><br></pre></td></tr></table></figure><p>修改ip与主机的映射：/etc/hosts</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">192.168.102.130  hadoop</span><br></pre></td></tr></table></figure><h3 id="Windows设置本地dns解析"><a href="#Windows设置本地dns解析" class="headerlink" title="Windows设置本地dns解析"></a>Windows设置本地dns解析</h3><blockquote><p>C:\Windows\System32\drivers\etc\hosts</p><p>添加内容：192.168.102.130 hadoop</p></blockquote><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Tue Feb 11 2020 13:53:16 GMT+0800 (GMT+08:00) --&gt;&lt;h3 id=&quot;安装时注意事项-用VMware安装centos-大数据虚拟机&quot;&gt;&lt;a href=&quot;#安装时注意事项-用VMware安装centos-大
      
    
    </summary>
    
    
      <category term="部署" scheme="http://kiedeng.github.io/categories/%E9%83%A8%E7%BD%B2/"/>
    
    
      <category term="Linux" scheme="http://kiedeng.github.io/tags/Linux/"/>
    
      <category term="VMware" scheme="http://kiedeng.github.io/tags/VMware/"/>
    
      <category term="centos" scheme="http://kiedeng.github.io/tags/centos/"/>
    
  </entry>
  
  <entry>
    <title>git的使用</title>
    <link href="http://kiedeng.github.io/2020/02/10/git%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://kiedeng.github.io/2020/02/10/git%E7%9A%84%E4%BD%BF%E7%94%A8/</id>
    <published>2020-02-10T03:44:17.000Z</published>
    <updated>2020-02-10T05:13:33.539Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Feb 10 2020 13:14:02 GMT+0800 (GMT+08:00) --><h3 id="Git的优势："><a href="#Git的优势：" class="headerlink" title="Git的优势："></a>Git的优势：</h3><blockquote><p>大部分操作在本地完成，不需要联网</p><p>完整性保证</p><p>尽可能添加数据而不是删除或修改数据</p><p>分支操作非常快捷流畅</p><p>与Linux命令全面兼容</p></blockquote><h3 id="代码托管中心"><a href="#代码托管中心" class="headerlink" title="代码托管中心"></a>代码托管中心</h3><blockquote><p>代码托管中心的任务：维护远程库</p><p>局域网环境：GitLab服务器</p><p>外网环境：GitHub，码云</p></blockquote><h3 id="Git命令行操作"><a href="#Git命令行操作" class="headerlink" title="Git命令行操作"></a>Git命令行操作</h3><ol><li><p>本库初始化（选择文件夹进行初始化）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure></li><li><p>设置签名</p><ul><li><p>作用：区分不同开发者的身份</p></li><li><p>辨析：这里设置的签名和登录远程库(代码托管中心)的账号、密码没有任何关<br>系。</p></li><li><p>命令：</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">项目级别&#x2F;仓库级别：仅在当前本地库范围内有效</span><br><span class="line">git config user.name kiedeng</span><br><span class="line">git config user.email kiedeng@qq.com</span><br><span class="line">信息保存位置：.&#x2F;.git&#x2F;config 文件</span><br><span class="line"></span><br><span class="line">系统用户级别：登录当前操作系统的用户范围</span><br><span class="line">git config --global user.name tom_glb</span><br><span class="line">git config --global goodMorning_pro@atguigu.com</span><br><span class="line">信息保存位置：~&#x2F;.gitconfig 文件</span><br></pre></td></tr></table></figure></li><li><p>基本操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 状态查看</span><br><span class="line">git status</span><br><span class="line"># 添加 (将工作区的文件或目录提交到暂存区)</span><br><span class="line">git [filename]</span><br><span class="line"># 提交 (将暂存区的文件提交的本地库)</span><br><span class="line">git commit -m &quot;commit message&quot; [filename]</span><br><span class="line"># 查看历史版本</span><br><span class="line">git log</span><br><span class="line">git reflog</span><br><span class="line"># 版本的前进与后退（基于索引值操作）</span><br><span class="line">git reset --hard [局部索引值]</span><br><span class="line">git reset --hard a6ace91</span><br></pre></td></tr></table></figure></li><li><p>分支管理</p><ul><li>分支：在版本控制过程中，使用多条线同时推进多个任务。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 创建分支</span><br><span class="line">git branch [分支名]</span><br><span class="line"># 查看分支</span><br><span class="line">git branch -v</span><br><span class="line"># 切换分支</span><br><span class="line">git checkout [分支名]</span><br><span class="line"># 合并</span><br><span class="line">git merge [被和并的分支名]</span><br></pre></td></tr></table></figure></li></ol><h3 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 查看所有远程地址别名</span><br><span class="line">git remote -v</span><br><span class="line"># 创建远程库地址别名</span><br><span class="line">git remote add [别名] [远程地址]</span><br><span class="line"># 推送 (将本地库上传到github仓库)</span><br><span class="line">git push [别名] [分支名]</span><br><span class="line"># 克隆(这样克隆：把远程库下载到本地，初始化本地库，创建别名)</span><br><span class="line">git origin [远程地址]</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Mon Feb 10 2020 13:14:02 GMT+0800 (GMT+08:00) --&gt;&lt;h3 id=&quot;Git的优势：&quot;&gt;&lt;a href=&quot;#Git的优势：&quot; class=&quot;headerlink&quot; title=&quot;Git的优势：&quot;&gt;&lt;/a&gt;
      
    
    </summary>
    
    
      <category term="使用手册" scheme="http://kiedeng.github.io/categories/%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/"/>
    
    
      <category term="Git" scheme="http://kiedeng.github.io/tags/Git/"/>
    
      <category term="GitHub" scheme="http://kiedeng.github.io/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>hexo搭建</title>
    <link href="http://kiedeng.github.io/2020/02/10/hexo%E6%90%AD%E5%BB%BA/"/>
    <id>http://kiedeng.github.io/2020/02/10/hexo%E6%90%AD%E5%BB%BA/</id>
    <published>2020-02-10T01:10:23.000Z</published>
    <updated>2020-02-10T03:42:36.626Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Feb 10 2020 11:53:00 GMT+0800 (GMT+08:00) --><p><strong>官方文档</strong>： <a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener" title="文档">链接</a></p><h3 id="一，使用Windows完成本地部署"><a href="#一，使用Windows完成本地部署" class="headerlink" title="一，使用Windows完成本地部署"></a>一，使用Windows完成本地部署</h3><ol><li><p>安装node.js和git,默认安装方式即可</p></li><li><p>安装hexo，打开cmd执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure></li><li><p>cmd移动到选择的一个文件夹，比如：d:\blog(下面全部假设初始化在本路径),进行hexo的初始化</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog</span><br></pre></td></tr></table></figure></li><li><p>在此目录安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure></li><li><p>启动服务器，访问的默认地址：<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure></li></ol><h3 id="二，使用GitHub完成远程部署"><a href="#二，使用GitHub完成远程部署" class="headerlink" title="二，使用GitHub完成远程部署"></a>二，使用GitHub完成远程部署</h3><ol><li><p>注册，登录github</p></li><li><p>新建仓库步骤如下：</p><blockquote><p>点击右上角+号，new repository，在Repository name处填 （你的gitusername）.github.io（比如：kiedeng.github.io），然后直接点Create repository</p></blockquote></li><li><p>在你初始化的路径（比如的d:\blog）下有一个_config.xml,用记事本打开此文件，最后几行添加github信息</p><blockquote><p>#(对于repo，比如：<a href="https://github.com/kiedeng/kiedeng.github.io.git" target="_blank" rel="noopener">https://github.com/kiedeng/kiedeng.github.io.git</a>)</p><p>deploy:<br>type: git<br>repo: <a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a>( yours username)/（your username）.github.io.git<br>branck: master</p></blockquote></li><li><p>将cmd移动到d:\blog下，安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li><li><p>执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 清理</span><br><span class="line">hexo clean</span><br><span class="line"># 生成静态文件</span><br><span class="line">hexo generate</span><br><span class="line"># 上传</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure></li><li><p>在弹出的git窗口中输入你的GitHub邮箱和密码</p></li><li><p>部署完成，等待一会，使用比如：<a href="http://kiedeng.github.io/访问">http://kiedeng.github.io/访问</a></p></li></ol><h3 id="三，更换hexo主题"><a href="#三，更换hexo主题" class="headerlink" title="三，更换hexo主题"></a>三，更换hexo主题</h3><ol><li><p>找到hexo的主题</p><p>推荐主题：<a href="https://blog.csdn.net/zgd826237710/article/details/99671027" target="_blank" rel="noopener">链接</a></p></li><li><p>选择一款，到达它们的github仓库（如果该主题作者的有文档，按文档即可完成更换）</p></li><li><p>将该主题下载下来（克隆也行），解压到d:\blog\themes,将该文件目录更名，比如：kiedeng</p></li><li><p>打开d:\blog_config.xml,将theme: 后面的参数改为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: kiedeng</span><br></pre></td></tr></table></figure></li><li><p>然后就可以部署和上传了</p></li></ol><h3 id="四，绑定域名"><a href="#四，绑定域名" class="headerlink" title="四，绑定域名"></a>四，绑定域名</h3><ol><li>选择一个合适的域名，买下域名</li><li>在域名的详细界面，打开解析</li><li>设置dns解析</li></ol><img src="https://kiedeng.github.io/picture/hexo_picture/hexo_搭建/dns_config.png" width="" height="" align="right"><ol start="4"><li>在d:\blog\source目录下，新建一个叫CNAME的文件（<strong>强调：</strong>不能有后缀），里面的内容为你的域名，比如:<a href="http://www.kangdong.store" target="_blank" rel="noopener">www.kangdong.store</a></li><li>等待一小会即可进行访问</li></ol><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Mon Feb 10 2020 11:53:00 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;&lt;strong&gt;官方文档&lt;/strong&gt;： &lt;a href=&quot;https://hexo.io/zh-cn/docs/&quot; target=&quot;_bl
      
    
    </summary>
    
    
      <category term="部署" scheme="http://kiedeng.github.io/categories/%E9%83%A8%E7%BD%B2/"/>
    
    
      <category term="教程" scheme="http://kiedeng.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="hexo" scheme="http://kiedeng.github.io/tags/hexo/"/>
    
  </entry>
  
</feed>
