<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>成长印记</title>
  
  
  <link href="http://kiedeng.github.io/atom.xml" rel="self"/>
  
  <link href="http://kiedeng.github.io/"/>
  <updated>2021-06-09T18:21:33.443Z</updated>
  <id>http://kiedeng.github.io/</id>
  
  <author>
    <name>康栋</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用Typora+github+picgo实现图片自动上传</title>
    <link href="http://kiedeng.github.io/2021/06/10/%E4%BD%BF%E7%94%A8Typora-github-picgo%E5%AE%9E%E7%8E%B0%E5%9B%BE%E7%89%87%E8%87%AA%E5%8A%A8%E4%B8%8A%E4%BC%A0/"/>
    <id>http://kiedeng.github.io/2021/06/10/%E4%BD%BF%E7%94%A8Typora-github-picgo%E5%AE%9E%E7%8E%B0%E5%9B%BE%E7%89%87%E8%87%AA%E5%8A%A8%E4%B8%8A%E4%BC%A0/</id>
    <published>2021-06-09T18:10:09.000Z</published>
    <updated>2021-06-09T18:21:33.443Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-使用github新建一个仓库"><a href="#1-使用github新建一个仓库" class="headerlink" title="1 使用github新建一个仓库"></a>1 使用github新建一个仓库</h1><p>注意为public</p><h1 id="2-获取token"><a href="#2-获取token" class="headerlink" title="2 获取token"></a>2 获取token</h1><p><img src="https://raw.githubusercontent.com/kiedeng/picture/main/img/image-20210610021810451.png" alt="image-20210610021810451"><img src="https://raw.githubusercontent.com/kiedeng/picture/main/img/image-20210610021942117.png" alt="image-20210610021942117"></p><p>复制生成的token，在第四步使用</p><h1 id="3-下载picgo"><a href="#3-下载picgo" class="headerlink" title="3 下载picgo"></a>3 下载picgo</h1><p>打开typora中的文件-》偏好设置-》图像，选择上传服务为picgo-core，然后点击“下载或更新”</p><h1 id="4-更新配置文件"><a href="#4-更新配置文件" class="headerlink" title="4 更新配置文件"></a>4 更新配置文件</h1><p>点击“打开配置文件”</p><pre class="line-numbers language-none"><code class="language-none">{  "picBed": {    "github": {      "repo": "kiedeng/picture",      "token": "******",      "path": "img/",      "customUrl": "",      "branch": "main"    },    "current": "github",    "uploader": "github"  },  "picgoPlugins": {}}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="5-点击“验证图片上传选项”"><a href="#5-点击“验证图片上传选项”" class="headerlink" title="5 点击“验证图片上传选项”"></a>5 点击“验证图片上传选项”</h1><p>测试是否正常</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-使用github新建一个仓库&quot;&gt;&lt;a href=&quot;#1-使用github新建一个仓库&quot; class=&quot;headerlink&quot; title=&quot;1 使用github新建一个仓库&quot;&gt;&lt;/a&gt;1 使用github新建一个仓库&lt;/h1&gt;&lt;p&gt;注意为public&lt;/p&gt;
</summary>
      
    
    
    
    <category term="教程" scheme="http://kiedeng.github.io/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Typora" scheme="http://kiedeng.github.io/tags/Typora/"/>
    
  </entry>
  
  <entry>
    <title>beautifulsoup总结</title>
    <link href="http://kiedeng.github.io/2021/06/10/beautifulsoup%E6%80%BB%E7%BB%93/"/>
    <id>http://kiedeng.github.io/2021/06/10/beautifulsoup%E6%80%BB%E7%BB%93/</id>
    <published>2021-06-09T17:35:09.000Z</published>
    <updated>2021-06-09T18:07:53.233Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一，导包，读取文档内容"><a href="#一，导包，读取文档内容" class="headerlink" title="一，导包，读取文档内容"></a>一，导包，读取文档内容</h2><pre class="line-numbers language-none"><code class="language-none">from bs4 import BeautifulSoupsoup = BeautifulSoup(text,"lxml")<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="二，基本方法使用"><a href="#二，基本方法使用" class="headerlink" title="二，基本方法使用"></a>二，基本方法使用</h2><pre class="line-numbers language-none"><code class="language-none"># 查找第一个属性为tbody的标签s = soup.find("tbody")# 返回为tag的列表，可以再在进行查找操作s.contents# 返回的类型基本为str，不能进行继续查找操作s.children<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/kiedeng/picture/main/img/image-20210610020743914.png" alt="image-20210610020743914"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一，导包，读取文档内容&quot;&gt;&lt;a href=&quot;#一，导包，读取文档内容&quot; class=&quot;headerlink&quot; title=&quot;一，导包，读取文档内容&quot;&gt;&lt;/a&gt;一，导包，读取文档内容&lt;/h2&gt;&lt;pre class=&quot;line-numbers language-non</summary>
      
    
    
    
    <category term="python" scheme="http://kiedeng.github.io/categories/python/"/>
    
    
    <category term="python" scheme="http://kiedeng.github.io/tags/python/"/>
    
    <category term="包" scheme="http://kiedeng.github.io/tags/%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>mongdb基本操作</title>
    <link href="http://kiedeng.github.io/2021/06/07/mongdb%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
    <id>http://kiedeng.github.io/2021/06/07/mongdb%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</id>
    <published>2021-06-07T05:25:54.000Z</published>
    <updated>2021-06-07T05:44:24.429Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-创建数据库"><a href="#1-创建数据库" class="headerlink" title="1 创建数据库"></a>1 创建数据库</h1><pre class="line-numbers language-none"><code class="language-none">use DATABASE_NAME# 删除数据db.dropDatabase()<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="2-创建集合"><a href="#2-创建集合" class="headerlink" title="2 创建集合"></a>2 创建集合</h1><pre class="line-numbers language-none"><code class="language-none">db.createCollection("runoob")# 删除集合db.collection.drop()<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="3-插入文档"><a href="#3-插入文档" class="headerlink" title="3 插入文档"></a>3 插入文档</h1><pre class="line-numbers language-none"><code class="language-none">db.haiyan.insertMany({title: 'MongoDB 教程',     description: 'MongoDB 是一个 Nosql 数据库',    by: '菜鸟教程',    url: 'http://www.runoob.com',    tags: ['mongodb', 'database', 'NoSQL'],    likes: 100})<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="4-查询文档"><a href="#4-查询文档" class="headerlink" title="4 查询文档"></a>4 查询文档</h1><pre class="line-numbers language-none"><code class="language-none">db.haiyan.find().pretty()<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-创建数据库&quot;&gt;&lt;a href=&quot;#1-创建数据库&quot; class=&quot;headerlink&quot; title=&quot;1 创建数据库&quot;&gt;&lt;/a&gt;1 创建数据库&lt;/h1&gt;&lt;pre class=&quot;line-numbers language-none&quot;&gt;&lt;code class=&quot;</summary>
      
    
    
    
    <category term="数据库" scheme="http://kiedeng.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="Mongdb" scheme="http://kiedeng.github.io/tags/Mongdb/"/>
    
  </entry>
  
  <entry>
    <title>anaconda的操作</title>
    <link href="http://kiedeng.github.io/2021/06/04/anaconda%E7%9A%84%E6%93%8D%E4%BD%9C/"/>
    <id>http://kiedeng.github.io/2021/06/04/anaconda%E7%9A%84%E6%93%8D%E4%BD%9C/</id>
    <published>2021-06-04T13:57:46.000Z</published>
    <updated>2021-06-09T08:28:16.915Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-创建新环境"><a href="#1-创建新环境" class="headerlink" title="1 创建新环境"></a>1 创建新环境</h1><p><a href="https://blog.csdn.net/zhajinjie/article/details/108948024">https://blog.csdn.net/zhajinjie/article/details/108948024</a></p><h2 id="2-不能使用jupter"><a href="#2-不能使用jupter" class="headerlink" title="2 不能使用jupter"></a>2 不能使用jupter</h2><p>安装了Python 2的Anaconda和Python 3的Anaconda(Windows都安装了64位)。如果我用 Jupyter Notebook 运行Python 2 一切都很好，但是对于Python 3，它不起作用</p><pre class="line-numbers language-none"><code class="language-none">pip uninstall pyzmq pip install pyzmq.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="3-修改anaconda默认的打开路径"><a href="#3-修改anaconda默认的打开路径" class="headerlink" title="3 修改anaconda默认的打开路径"></a>3 修改anaconda默认的打开路径</h3><p>使用修改快捷方式的方法改变路径</p><p>　　实现的方法就是修改快捷方式标签的目标栏，如下图：</p><p>　　<img src="https://images2018.cnblogs.com/blog/1405010/201805/1405010-20180523103240157-569682129.png" alt="img"></p><p>后面有一个%USERPROFILE%</p><p>将%USERPROFILE%改成你要的路径就”F:\Jupyter_Data”</p><p>然后应用-&gt;确定</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-创建新环境&quot;&gt;&lt;a href=&quot;#1-创建新环境&quot; class=&quot;headerlink&quot; title=&quot;1 创建新环境&quot;&gt;&lt;/a&gt;1 创建新环境&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/zhajinjie/article/d</summary>
      
    
    
    
    <category term="未分类" scheme="http://kiedeng.github.io/categories/%E6%9C%AA%E5%88%86%E7%B1%BB/"/>
    
    
    <category term="默认" scheme="http://kiedeng.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>pycharm中配置pyspark”</title>
    <link href="http://kiedeng.github.io/2021/06/04/pycharm%E4%B8%AD%E9%85%8D%E7%BD%AEpyspark/"/>
    <id>http://kiedeng.github.io/2021/06/04/pycharm%E4%B8%AD%E9%85%8D%E7%BD%AEpyspark/</id>
    <published>2021-06-04T13:50:04.000Z</published>
    <updated>2021-06-04T13:51:00.806Z</updated>
    
    <content type="html"><![CDATA[<p>1 下载官网spark-2.1.1-bin-hadoop2.7.tgz（版本自己选择），解压将文件放在了指定路径下，这个文件夹里面有python文件，python文件下还有两个压缩包py4j-some-version.zip和pyspark.zip，之后会用到）</p><p>2 pycharm使用pyspark时from pyspark import SparkContext，代码依然划红线，运行依然显示没有该模块。</p><p>3 随便打开一个project，pycharm右上角“run”三角形的左边有一个run configurition，打开它。</p><p>4 设置configurition—Environment— Environment variables —点击“…”，出现框框，点击+，输入两个name，一个是SPARK_HOME，另外一个是PYTHONPATH，设置它们的values，SPARK_HOME的value是安装文件夹spark-2.1.1-bin-hadoop2.7的绝对路径，PYTHONPATH的value是该绝对路径／python，例如我的SPARK_HOME的value是/Applications/spark/spark-2.1.1-bin-hadoop2.7，那么我的PYTHONPATH的value是/Applications/spark/spark-2.1.1-bin-hadoop2.7/python 。设置好了保存。（注意不管是路径的哪里，都不能有空格！！尤其是结尾！！今天下午就因为一个空格折磨我好久）</p><p>5 关键的一步。在perferences中的project structure中点击右边的“add  content root”，添加py4j-some-version.zip和pyspark.zip的路径（这两个文件都在Spark中的python文件夹下）</p><p>6 完成，from pyspark import SparkContext，红线消失，运行正常。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;1 下载官网spark-2.1.1-bin-hadoop2.7.tgz（版本自己选择），解压将文件放在了指定路径下，这个文件夹里面有python文件，python文件下还有两个压缩包py4j-some-version.zip和pyspark.zip，之后会用到）&lt;/p&gt;
&lt;</summary>
      
    
    
    
    <category term="未分类" scheme="http://kiedeng.github.io/categories/%E6%9C%AA%E5%88%86%E7%B1%BB/"/>
    
    
    <category term="默认" scheme="http://kiedeng.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>小说阅读器</title>
    <link href="http://kiedeng.github.io/2021/03/09/%E5%B0%8F%E8%AF%B4%E9%98%85%E8%AF%BB%E5%99%A8/"/>
    <id>http://kiedeng.github.io/2021/03/09/%E5%B0%8F%E8%AF%B4%E9%98%85%E8%AF%BB%E5%99%A8/</id>
    <published>2021-03-09T06:13:28.000Z</published>
    <updated>2021-03-09T06:16:05.514Z</updated>
    
    <content type="html"><![CDATA[<h2 id="功能介绍"><a href="#功能介绍" class="headerlink" title="功能介绍"></a>功能介绍</h2><p>一个自定义数据源的阅读小说工具</p><h2 id="软件路径"><a href="#软件路径" class="headerlink" title="软件路径"></a>软件路径</h2><p><a href="https://github.com/gedoor/legado">https://github.com/gedoor/legado</a></p><h2 id="数据源"><a href="#数据源" class="headerlink" title="数据源"></a>数据源</h2><p><a href="https://yuedu.xiu2.xyz/shuyuan">https://yuedu.xiu2.xyz/shuyuan</a></p><p><a href="https://moonbegonia.github.io/Source/yuedu/audio.json">https://moonbegonia.github.io/Source/yuedu/audio.json</a></p><p><a href="https://gitee.com/namofree/yuedu3/raw/legado3booksource/legado3_booksource_by_Namo.json">https://gitee.com/namofree/yuedu3/raw/legado3booksource/legado3_booksource_by_Namo.json</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;功能介绍&quot;&gt;&lt;a href=&quot;#功能介绍&quot; class=&quot;headerlink&quot; title=&quot;功能介绍&quot;&gt;&lt;/a&gt;功能介绍&lt;/h2&gt;&lt;p&gt;一个自定义数据源的阅读小说工具&lt;/p&gt;
&lt;h2 id=&quot;软件路径&quot;&gt;&lt;a href=&quot;#软件路径&quot; class=&quot;heade</summary>
      
    
    
    
    <category term="生活" scheme="http://kiedeng.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="小说 工具" scheme="http://kiedeng.github.io/tags/%E5%B0%8F%E8%AF%B4-%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>数据采集模块</title>
    <link href="http://kiedeng.github.io/2020/05/17/%E6%95%B0%E6%8D%AE%E9%87%87%E9%9B%86%E6%A8%A1%E5%9D%97/"/>
    <id>http://kiedeng.github.io/2020/05/17/%E6%95%B0%E6%8D%AE%E9%87%87%E9%9B%86%E6%A8%A1%E5%9D%97/</id>
    <published>2020-05-17T07:01:50.000Z</published>
    <updated>2020-05-17T09:14:14.771Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一，hadoop安装"><a href="#一，hadoop安装" class="headerlink" title="一，hadoop安装"></a>一，hadoop安装</h2><h3 id="1-HDFS存储多目录"><a href="#1-HDFS存储多目录" class="headerlink" title="1 HDFS存储多目录"></a>1 HDFS存储多目录</h3><p>在hdfs-site.xml中操作</p><pre class="line-numbers language-none"><code class="language-none">&lt;property&gt;    &lt;name&gt;dfs.datanode.data.dir&lt;/name&gt;&lt;value&gt;file:///${hadoop.tmp.dir}/dfs/data1,file:///hd2/dfs/data2,file:///hd3/dfs/data3,file:///hd4/dfs/data4&lt;/value&gt;&lt;/property&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>数据平衡指令</p><pre class="line-numbers language-none"><code class="language-none">bin/start-balancer.sh –threshold 10## 对于参数10，代表的是集群中各个节点的磁盘空间利用率相差不超过10%bin/stop-balancer.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="2-支持LZO压缩配置"><a href="#2-支持LZO压缩配置" class="headerlink" title="2 支持LZO压缩配置"></a>2 支持LZO压缩配置</h3><ul><li><p>将编译好的hadoop-lzo-0.4.20.jar 放入hadoop-2.7.2/share/hadoop/common/，并且分发给其他hadoop机器</p></li><li><p>core-site.xml增加配置支持LZO压缩，并分发给其他机器</p></li></ul><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><span class="token prolog">&lt;?xml-stylesheet type="text/xsl" href="configuration.xsl"?&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>io.compression.codecs<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>org.apache.hadoop.io.compress.GzipCodec,org.apache.hadoop.io.compress.DefaultCodec,org.apache.hadoop.io.compress.BZip2Codec,org.apache.hadoop.io.compress.SnappyCodec,com.hadoop.compression.lzo.LzoCodec,com.hadoop.compression.lzo.LzopCodec<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>io.compression.codec.lzo.class<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>com.hadoop.compression.lzo.LzoCodec<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>重启集群</li></ul><h3 id="3-LZO创建索引"><a href="#3-LZO创建索引" class="headerlink" title="3 LZO创建索引"></a>3 LZO创建索引</h3><p>LZO的可切片特性依赖于索引，所以需要为LZO压缩文件创建索引</p><pre class="line-numbers language-none"><code class="language-none">hadoop jar /opt/module/hadoop-2.7.2/share/hadoop/common/hadoop-lzo-0.4.20.jar  com.hadoop.compression.lzo.DistributedLzoIndexer /input/bigtable.lzo# hadoop jar (lzo的jar文件) com.hadoop.compression.lzo.DistributedLzoIndexer (输出文件)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="4-基准测试"><a href="#4-基准测试" class="headerlink" title="4 基准测试"></a>4 基准测试</h3><p>1）测试写性能</p><pre class="line-numbers language-none"><code class="language-none">hadoop jar /opt/module/hadoop-2.7.2/share/hadoop/mapreduce/hadoop-mapreduce-client-jobclient-2.7.2-tests.jar TestDFSIO -write -nrFiles 10 -fileSize 128MB<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2）测试读性能</p><pre class="line-numbers language-none"><code class="language-none">hadoop jar /opt/module/hadoop-2.7.2/share/hadoop/mapreduce/hadoop-mapreduce-client-jobclient-2.7.2-tests.jar TestDFSIO -read -nrFiles 10 -fileSize 128MB<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>3）测试删除生成数据</p><pre class="line-numbers language-none"><code class="language-none">hadoop jar /opt/module/hadoop-2.7.2/share/hadoop/mapreduce/hadoop-mapreduce-client-jobclient-2.7.2-tests.jar TestDFSIO -clean<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="5-Hadoop参数调优"><a href="#5-Hadoop参数调优" class="headerlink" title="5 Hadoop参数调优"></a>5 Hadoop参数调优</h3><p>1 hdfs-site.xml</p><pre class="line-numbers language-none"><code class="language-none">dfs.namenode.handler.count=20 * log2(Cluster Size)，比如集群规模为8台时，此参数设置为60NameNode有一个工作线程池，用来处理不同DataNode的并发心跳以及客户端并发的元数据操作。对于大集群或者有大量客户端的集群来说，通常需要增大参数dfs.namenode.handler.count的默认值10。设置该值的一般原则是将其设置为集群大小的自然对数乘以20，即20logN，N为集群大小。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2 参数调优yarn-site.xml</p><pre class="line-numbers language-none"><code class="language-none">内存利用率不够。这个一般是Yarn的2个配置造成的，单个任务可以申请的最大内存大小，和Hadoop单个节点可用内存大小。调节这两个参数能提高系统内存的利用率。（a）yarn.nodemanager.resource.memory-mb表示该节点上YARN可使用的物理内存总量，默认是8192（MB），注意，如果你的节点内存资源不够8GB，则需要调减小这个值，而YARN不会智能的探测节点的物理内存总量。（b）yarn.scheduler.maximum-allocation-mb单个任务可申请的最多物理内存量，默认是8192（MB）。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>3 Hadoop宕机</p><ul><li><p>如果<strong>MR造成系统宕机</strong>。此时要控制Yarn同时运行的任务数，和每个任务申请的最大内存。</p></li><li><p>如果写入文件过量造成<strong>NameNode宕机</strong>。那么调高Kafka的存储大小，控制从Kafka到HDFS的写入速度。</p></li></ul><h2 id="二，Zookeeper安装"><a href="#二，Zookeeper安装" class="headerlink" title="二，Zookeeper安装"></a>二，Zookeeper安装</h2><h2 id="三，日志生成"><a href="#三，日志生成" class="headerlink" title="三，日志生成"></a>三，日志生成</h2><h2 id="四，采集日志Flume"><a href="#四，采集日志Flume" class="headerlink" title="四，采集日志Flume"></a>四，采集日志Flume</h2><h2 id="五，Kafka安装"><a href="#五，Kafka安装" class="headerlink" title="五，Kafka安装"></a>五，Kafka安装</h2><p>六</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一，hadoop安装&quot;&gt;&lt;a href=&quot;#一，hadoop安装&quot; class=&quot;headerlink&quot; title=&quot;一，hadoop安装&quot;&gt;&lt;/a&gt;一，hadoop安装&lt;/h2&gt;&lt;h3 id=&quot;1-HDFS存储多目录&quot;&gt;&lt;a href=&quot;#1-HDFS存储多目</summary>
      
    
    
    
    <category term="hadoop" scheme="http://kiedeng.github.io/categories/hadoop/"/>
    
    
    <category term="默认" scheme="http://kiedeng.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>安装superset</title>
    <link href="http://kiedeng.github.io/2020/05/17/%E5%AE%89%E8%A3%85superset/"/>
    <id>http://kiedeng.github.io/2020/05/17/%E5%AE%89%E8%A3%85superset/</id>
    <published>2020-05-17T02:31:34.000Z</published>
    <updated>2020-05-17T02:47:16.263Z</updated>
    
    <content type="html"><![CDATA[<p>概述：Apache Superset是一个开源的、现代的、轻量级BI分析工具，能够对接多种数据源、拥有丰富的图标展示形式、支持自定义仪表盘，且拥有友好的用户界面，十分易用。</p><h2 id="1-安装python环境"><a href="#1-安装python环境" class="headerlink" title="1 安装python环境"></a>1 安装python环境</h2><h3 id="安装Miniconda"><a href="#安装Miniconda" class="headerlink" title="安装Miniconda"></a>安装Miniconda</h3><p><strong>1</strong>）下载Miniconda（Python3版本）</p><p>下载地址：<a href="https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh">https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh</a></p><p><strong>2</strong>）安装Miniconda</p><p>(1) 执行以下命令进行安装，并按照提示操作，直到安装完成。</p><pre class="line-numbers language-none"><code class="language-none">bash Miniconda3-latest-Linux-x86_64.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>(2) 安装过程中，可以指定安装路径</p><p>(3) 配置Miniconda的环境变量（可以不配，在安装路径的路径）</p><p>(4)取消激活base环境</p><pre class="line-numbers language-none"><code class="language-none">conda config --set auto_activate_base false<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="创建Python3-6环境"><a href="#创建Python3-6环境" class="headerlink" title="创建Python3.6环境"></a>创建Python3.6环境</h3><p>1 配置conda国内镜像</p><pre class="line-numbers language-none"><code class="language-none">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/freeconda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/mainconda config --set show_channel_urls yes<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>2 创建Python3.6环境</p><pre class="line-numbers language-none"><code class="language-none">conda create --name superset python=3.6说明：conda环境管理常用命令创建环境：conda create -n env_name查看所有环境：conda info --envs删除一个环境：conda remove -n env_name --all<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>3 激活superset环境</p><pre class="line-numbers language-none"><code class="language-none">conda activate supersetconda deactivate(退出激活)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="2-Superset部署"><a href="#2-Superset部署" class="headerlink" title="2 Superset部署"></a>2 Superset部署</h2><p>1 安装依赖</p><pre class="line-numbers language-none"><code class="language-none">sudo yum install -y python-setuptoolssudo yum install -y gcc gcc-c++ libffi-devel python-devel python-pip python-wheel openssl-devel cyrus-sasl-devel openldap-devel<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>2 安装superset</p><pre class="line-numbers language-none"><code class="language-none">## 安装（更新）setuptools和pippip install --upgrade setuptools pip -i https://pypi.douban.com/simple/## 安装Supetsetpip install apache-superset -i https://pypi.douban.com/simple/## 初始化Supetset数据库superset db upgrade## 创建管理员用户export FLASK_APP=supersetflask fab create-admin## Superset初始化superset init<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>3 启动superset</p><p>1 安装gunicorn</p><pre class="line-numbers language-none"><code class="language-none">pip install gunicorn -i https://pypi.douban.com/simple/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2 启动superset（确保环境为superset）</p><pre class="line-numbers language-none"><code class="language-none">gunicorn --workers 5 --timeout 120 --bind hadoop102:8787  superset:app --daemon 说明：--workers：指定进程个数--timeout：worker进程超时时间，超时会自动重启--bind：绑定本机地址，即为Superset访问地址--daemon：后台运行<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>3 停止superseet</p><pre class="line-numbers language-none"><code class="language-none">ps -ef | awk '/gunicorn/ &amp;&amp; !/awk/{print $2}' | xargs kill -9退出环境conda deactivate<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>4 登录supserset</p><pre class="line-numbers language-none"><code class="language-none">默认的端口为8787<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3-Superset的使用"><a href="#3-Superset的使用" class="headerlink" title="3 Superset的使用"></a>3 Superset的使用</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;概述：Apache Superset是一个开源的、现代的、轻量级BI分析工具，能够对接多种数据源、拥有丰富的图标展示形式、支持自定义仪表盘，且拥有友好的用户界面，十分易用。&lt;/p&gt;
&lt;h2 id=&quot;1-安装python环境&quot;&gt;&lt;a href=&quot;#1-安装python环境&quot; </summary>
      
    
    
    
    <category term="安装" scheme="http://kiedeng.github.io/categories/%E5%AE%89%E8%A3%85/"/>
    
    
    <category term="默认" scheme="http://kiedeng.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>azkaban安装部署</title>
    <link href="http://kiedeng.github.io/2020/05/15/azkaban%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/"/>
    <id>http://kiedeng.github.io/2020/05/15/azkaban%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/</id>
    <published>2020-05-15T09:12:43.000Z</published>
    <updated>2020-05-16T10:01:11.193Z</updated>
    
    <content type="html"><![CDATA[<h2 id="生成密钥库所出现的问题"><a href="#生成密钥库所出现的问题" class="headerlink" title="生成密钥库所出现的问题"></a>生成密钥库所出现的问题</h2><p>补充：keytool -genkey -alias tomcat1 -keyalg RSA -keystore second.keystore</p><p>参考链接：<a href="https://blog.csdn.net/weixin_38038479/article/details/101207322">链接</a></p><h2 id="配置邮箱"><a href="#配置邮箱" class="headerlink" title="配置邮箱"></a>配置邮箱</h2><pre class="line-numbers language-none"><code class="language-none"># mail settingsmail.sender=572245955@qq.commail.host=smtp.qq.commail.user=572245955@qq.commail.password=(填写qq的授权码)job.failure.email=job.success.email=<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;生成密钥库所出现的问题&quot;&gt;&lt;a href=&quot;#生成密钥库所出现的问题&quot; class=&quot;headerlink&quot; title=&quot;生成密钥库所出现的问题&quot;&gt;&lt;/a&gt;生成密钥库所出现的问题&lt;/h2&gt;&lt;p&gt;补充：keytool -genkey -alias tomcat1 </summary>
      
    
    
    
    <category term="Azkaba" scheme="http://kiedeng.github.io/categories/Azkaba/"/>
    
    
    <category term="默认" scheme="http://kiedeng.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>常见命令行操作</title>
    <link href="http://kiedeng.github.io/2020/05/13/%E5%B8%B8%E8%A7%81%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%93%8D%E4%BD%9C/"/>
    <id>http://kiedeng.github.io/2020/05/13/%E5%B8%B8%E8%A7%81%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%93%8D%E4%BD%9C/</id>
    <published>2020-05-13T08:25:07.000Z</published>
    <updated>2020-05-13T09:40:20.395Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Kafka常见命令"><a href="#Kafka常见命令" class="headerlink" title="Kafka常见命令"></a>Kafka常见命令</h2><pre class="line-numbers language-none"><code class="language-none">启动生产者bin/kafka-console-producer.sh \--broker-list hadoop102:9092 --topic first启动消费者（zookeeper存储offset）bin/kafka-console-consumer.sh --topic atguigu --zookeeper hadoop102:2181启动消费者（本地存储offset）bin/kafka-console-consumer.sh --topic shangguigu --bootstrap-server hadoop102:9092<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Kafka常见命令&quot;&gt;&lt;a href=&quot;#Kafka常见命令&quot; class=&quot;headerlink&quot; title=&quot;Kafka常见命令&quot;&gt;&lt;/a&gt;Kafka常见命令&lt;/h2&gt;&lt;pre class=&quot;line-numbers language-none&quot;&gt;&lt;code</summary>
      
    
    
    
    <category term="大数据" scheme="http://kiedeng.github.io/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="默认" scheme="http://kiedeng.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>主题的美化</title>
    <link href="http://kiedeng.github.io/2020/05/05/%E4%B8%BB%E9%A2%98%E7%9A%84%E7%BE%8E%E5%8C%96/"/>
    <id>http://kiedeng.github.io/2020/05/05/%E4%B8%BB%E9%A2%98%E7%9A%84%E7%BE%8E%E5%8C%96/</id>
    <published>2020-05-05T11:28:19.000Z</published>
    <updated>2020-05-06T13:22:42.344Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一，增加天气效果"><a href="#一，增加天气效果" class="headerlink" title="一，增加天气效果"></a>一，增加天气效果</h2><p>打开<a href="https://wanghongfeng.cn/go/aHR0cHM6Ly93d3cuc2VuaXZlcnNlLmNvbQ==">心知天气</a>的官网，注册账号，并开通免费版服务。<br>之后在/handsome/component/headnav.php中搜索<!--/ search form-->，在搜索到的地方的前一行添加如下代码，并把其中的公钥和私钥修改为你自己的即可。</p><pre class="line-numbers language-none"><code class="language-none">&lt;!-- 知心天气--&gt;    &lt;div id="tp-weather-widget" class="navbar-form navbar-form-sm navbar-left shift"&gt;&lt;/div&gt;&lt;script&gt;(function(T,h,i,n,k,P,a,g,e){g=function(){P=h.createElement(i);a=h.getElementsByTagName(i)[0];P.src=k;P.charset="utf-8";P.async=1;a.parentNode.insertBefore(P,a)};T["ThinkPageWeatherWidgetObject"]=n;T[n]||(T[n]=function(){(T[n].q=T[n].q||[]).push(arguments)});T[n].l=+new Date();if(T.attachEvent){T.attachEvent("onload",g)}else{T.addEventListener("load",g,false)}}(window,document,"script","tpwidget","//widget.seniverse.com/widget/chameleon.js"))&lt;/script&gt;&lt;script&gt;tpwidget("init", {    "flavor": "slim",    "location": "WX4FBXXFKE4F",    "geolocation": "enabled",    "language": "auto",    "unit": "c",    "theme": "chameleon",    "container": "tp-weather-widget",    "bubble": "enabled",    "alarmType": "badge",    "color": "#C6C6C6",    "uid": "你的公钥",    "hash": "你的私钥"});tpwidget("show");&lt;/script&gt;&lt;!-- 心知结束--&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二，美化"><a href="#二，美化" class="headerlink" title="二，美化"></a>二，美化</h2><pre class="line-numbers language-none"><code class="language-none">/* * 文章一二三四级标题美化 */#post-content h1 {font-size: 30px}#post-content h2 {position: relative;margin: 20px 0 32px!important;font-size: 1.55em;}#post-content h3 {font-size: 20px}#post-content h4 {font-size: 15px}#post-content h2::after {transition: all .35s;content: "";position: absolute;background: linear-gradient(#3c67bd8c 30%,#3c67bd 70%);width: 1em;left: 0;box-shadow: 0 3px 3px rgba(32,160,255,.4);height: 3px;bottom: -8px;}#post-content h2::before {content: "";width: 100%;border-bottom: 1px solid #eee;bottom: -7px;position: absolute}#post-content h2:hover::after {width: 2.5em;}#post-content h1,#post-content h2,#post-content h3,#post-content h4,#post-content h5,#post-content h6 {color: #666;line-height: 1.4;font-weight: 700;margin: 30px 0 10px 0} /* *  首页文章列表悬停上浮 */.blog-post .panel:not(article) {transition: all 0.3s;}.blog-post .panel:not(article):hover {transform: translateY(-10px);box-shadow: 0 8px 10px rgba(73, 90, 47, 0.47);}/* *  文章内头图和文章图片悬停放大并将超出范围隐藏 */.entry-thumbnail {overflow: hidden;}#post-content img {border-radius: 10px;transition: 0.5s;}#post-content img:hover {transform: scale(1.05);}/* *首页文章图片获取焦点放大 */.item-thumb {cursor: pointer;transition: all 0.6s;}.item-thumb:hover {transform: scale(1.05);}.item-thumb-small {cursor: pointer;transition: all 0.6s;}.item-thumb-small:hover {transform: scale(1.05);}/*文章内打赏图标跳动*/.btn - pay {    animation: star 0.5s ease - in-out infinite alternate;}@keyframes star {    from {        transform: scale(1);    }    to {        transform: scale(1.1);    }}/* *修改字体 */*{font-family: 'Noto Serif SC', serif;font-family: 'Fira Code', monospace;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三，头像呼吸光环和鼠标悬停旋转放大"><a href="#三，头像呼吸光环和鼠标悬停旋转放大" class="headerlink" title="三，头像呼吸光环和鼠标悬停旋转放大"></a>三，头像呼吸光环和鼠标悬停旋转放大</h2><pre class="line-numbers language-none"><code class="language-none">.img-full {    width: 100px;    border-radius: 50%;    animation: light 4s ease-in-out infinite;    transition: 0.5s;}.img-full:hover {    transform: scale(1.15) rotate(720deg);}@keyframes light {    0% {        box-shadow: 0 0 4px #f00;    }    25% {        box-shadow: 0 0 16px #0f0;    }    50% {        box-shadow: 0 0 4px #00f;    }    75% {        box-shadow: 0 0 16px #0f0;    }    100% {        box-shadow: 0 0 4px #f00;    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="四，qq头像的图片链接"><a href="#四，qq头像的图片链接" class="headerlink" title="四，qq头像的图片链接"></a>四，qq头像的图片链接</h2><pre class="line-numbers language-none"><code class="language-none">https://q1.qlogo.cn/g?b=qq&amp;nk=572245955&amp;s=640<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="五，自定义js美化"><a href="#五，自定义js美化" class="headerlink" title="五，自定义js美化"></a>五，自定义js美化</h2><pre class="line-numbers language-none"><code class="language-none">/*彩色标签云*/let tags = document.querySelectorAll("#tag_cloud-2 a");let colorArr = ["#428BCA", "#AEDCAE", "#ECA9A7", "#DA99FF", "#FFB380", "#D9B999"];tags.forEach(tag =&gt; {    tagsColor = colorArr[Math.floor(Math.random() * colorArr.length)];    tag.style.backgroundColor = tagsColor;});<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="六，博主介绍特效"><a href="#六，博主介绍特效" class="headerlink" title="六，博主介绍特效"></a>六，博主介绍特效</h2><pre class="line-numbers language-none"><code class="language-none">&lt;!--博主介绍的闪字特效--&gt;&lt;span class="text-muted text-xs block"&gt;&lt;div id="chakhsu"&gt;&lt;/div&gt; &lt;script&gt; var chakhsu = function (r) {function t() {return b[Math.floor(Math.random() * b.length)]} function e() {return String.fromCharCode(94 * Math.random() + 33)} function n(r) {for (var n = document.createDocumentFragment(), i = 0; r &gt; i; i++) { var l = document.createElement("span"); l.textContent = e(), l.style.color = t(), n.appendChild(l) } return n}function i() {var t = o[c.skillI]; c.step ? c.step-- : (c.step = g, c.prefixP &lt; l.length ? (c.prefixP &gt;= 0 &amp;&amp; (c.text += l[c.prefixP]), c.prefixP++) : "forward" === c.direction ? c.skillP &lt; t.length ? (c.text += t[c.skillP], c.skillP++) : c.delay ? c.delay-- : (c.direction = "backward", c.delay = a) : c.skillP &gt; 0 ? (c.text = c.text.slice(0, -1), c.skillP--) : (c.skillI = (c.skillI + 1) % o.length, c.direction = "forward")), r.textContent = c.text, r.appendChild(n(c.prefixP &lt; l.length ? Math.min(s, s + c.prefixP) : Math.min(s, t.length - c.skillP))), setTimeout(i, d) } /*以下内容自定义修改*/ var l = "", o = ["Keep Fighting" ].map(function (r) {return r + ""}), a = 2, g = 1, s = 5, d = 75, b = ["rgb(110,64,170)", "rgb(150,61,179)", "rgb(191,60,175)", "rgb(228,65,157)", "rgb(254,75,131)", "rgb(255,94,99)", "rgb(255,120,71)", "rgb(251,150,51)", "rgb(226,183,47)", "rgb(198,214,60)", "rgb(175,240,91)", "rgb(127,246,88)", "rgb(82,246,103)", "rgb(48,239,130)", "rgb(29,223,163)", "rgb(26,199,194)", "rgb(35,171,216)", "rgb(54,140,225)", "rgb(76,110,219)", "rgb(96,84,200)"], c = {text: "", prefixP: -s, skillI: 0, skillP: 0, direction: "forward", delay: a, step: g}; i() }; chakhsu(document.getElementById('chakhsu')); &lt;/script&gt; &lt;/span&gt; &lt;/span&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="七，倒计时"><a href="#七，倒计时" class="headerlink" title="七，倒计时"></a>七，倒计时</h2><pre class="line-numbers language-none"><code class="language-none">&lt;style&gt;        .gn_box{             border: none;             border-radius: 15px;         }          .gn_box {             padding: 10px 14px;             margin: 10px;             margin-bottom: 20px;             text-align: center;             background-color: #fff;         }          #t_d{             color: #982585;             font-size: 18px;         }          #t_h{             color: #8f79c1;             font-size: 18px;         }          #t_m{             color: #65b4b5;             font-size: 18px;         }          #t_s{             color: #83caa3;             font-size: 18px;         }       &lt;/style&gt;       &lt;div class="gn_box"&gt;             &lt;h1 style="font-size:1em;"&gt;&lt;font color="#E80017"&gt;2&lt;/font&gt;        &lt;font color="#D1002E"&gt;0&lt;/font&gt;        &lt;font color="#BA0045"&gt;2&lt;/font&gt;        &lt;font color="#A3005C"&gt;0&lt;/font&gt;        &lt;font color="#8C0073"&gt;年&lt;/font&gt;        &lt;font color="#75008A"&gt;-&lt;/font&gt;         &lt;font color="#5E00A1"&gt;秋&lt;/font&gt;        &lt;font color="#4700B8"&gt;招&lt;/font&gt;        &lt;font color="#3000CF"&gt;倒&lt;/font&gt;        &lt;font color="#1900E6"&gt;计&lt;/font&gt;        &lt;font color="#0200FD"&gt;时&lt;/font&gt;&lt;/h1&gt;        &lt;center&gt;          &lt;div id="CountMsg" class="HotDate"&gt;            &lt;span id="t_d"&gt; 天&lt;/span&gt;            &lt;span id="t_h"&gt; 时&lt;/span&gt;&lt;span id="t_m"&gt; 分&lt;/span&gt;            &lt;span id="t_s"&gt; 秒&lt;/span&gt;          &lt;/div&gt;        &lt;/center&gt;         &lt;script type="text/javascript"&gt;        function getRTime() {                var EndTime = new Date('2020/09/1 00:00:00');                       var NowTime = new Date();                       var t = EndTime.getTime() - NowTime.getTime();                              var d = Math.floor(t / 1000 / 60 / 60 / 24);                              var h = Math.floor(t / 1000 / 60 / 60 % 24);                              var m = Math.floor(t / 1000 / 60 % 60);                              var s = Math.floor(t / 1000 % 60);                      var day = document.getElementById("t_d");                     if (day != null) {                              day.innerHTML = d + " 天";                        }                         var hour = document.getElementById("t_h");                     if (hour != null) {                             hour.innerHTML = h + " 时";                       }                         var min = document.getElementById("t_m");                     if (min != null) {                            min.innerHTML = m + " 分";                        }                         var sec = document.getElementById("t_s");                     if (sec != null) {                             sec.innerHTML = s + " 秒";                     }          }               setInterval(getRTime, 1000);              &lt;/script&gt;      &lt;/div&gt;            &lt;!--首页输出文章--&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="八，疫情图"><a href="#八，疫情图" class="headerlink" title="八，疫情图"></a>八，疫情图</h2><pre class="line-numbers language-none"><code class="language-none">&lt;iframe src="https://www.lovestu.com/api/project/cnmapyinqing/obj.php" height="500" frameborder="no" border="0" width="100%"&gt; &lt;/iframe&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>参考链接：<a href="https://wanghongfeng.cn/handsome-diy.html">https://wanghongfeng.cn/handsome-diy.html</a></p><p><a href="https://rehtt.com/index.php/archives/193">https://rehtt.com/index.php/archives/193</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一，增加天气效果&quot;&gt;&lt;a href=&quot;#一，增加天气效果&quot; class=&quot;headerlink&quot; title=&quot;一，增加天气效果&quot;&gt;&lt;/a&gt;一，增加天气效果&lt;/h2&gt;&lt;p&gt;打开&lt;a href=&quot;https://wanghongfeng.cn/go/aHR0cHM6</summary>
      
    
    
    
    <category term="typecho" scheme="http://kiedeng.github.io/categories/typecho/"/>
    
    
    <category term="默认" scheme="http://kiedeng.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>hql常见函数</title>
    <link href="http://kiedeng.github.io/2020/03/19/hql%E5%B8%B8%E8%A7%81%E5%87%BD%E6%95%B0/"/>
    <id>http://kiedeng.github.io/2020/03/19/hql%E5%B8%B8%E8%A7%81%E5%87%BD%E6%95%B0/</id>
    <published>2020-03-19T07:27:35.000Z</published>
    <updated>2020-03-19T07:28:42.883Z</updated>
    
    <content type="html"><![CDATA[<p>常用日期函数</p><p>unix_timestamp:返回当前或指定时间的时间戳    </p><p>from_unixtime：将时间戳转为日期格式</p><p>current_date：当前日期</p><p>current_timestamp：当前的日期加时间</p><p>to_date：抽取日期部分</p><p>year：获取年</p><p>month：获取月</p><p>day：获取日</p><p>hour：获取时</p><p>minute：获取分</p><p>second：获取秒</p><p>weekofyear：当前时间是一年中的第几周</p><p>dayofmonth：当前时间是一个月中的第几天</p><p>months_between： 两个日期间的月份</p><p>add_months：日期加减月</p><p>datediff：两个日期相差的天数</p><p>date_add：日期加天数</p><p>date_sub：日期减天数</p><p>last_day：日期的当月的最后一天</p><p>常用取整函数</p><p>round： 四舍五入</p><p>ceil：  向上取整</p><p>floor： 向下取整</p><p>常用字符串操作函数</p><p>upper： 转大写</p><p>lower： 转小写</p><p>length： 长度</p><p>trim：  前后去空格</p><p>lpad： 向左补齐，到指定长度</p><p>rpad：  向右补齐，到指定长度</p><p>regexp_replace： SELECT regexp_replace(‘100-200’, ‘(\d+)’, ‘num’) ；</p><p>​    使用正则表达式匹配目标字符串，匹配成功后替换！</p><p>集合操作</p><p>size： 集合中元素的个数</p><p>map_keys： 返回map中的key</p><p>map_values: 返回map中的value</p><p>array_contains: 判断array中是否包含某个元素</p><p>sort_array： 将array中的元素排序</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;常用日期函数&lt;/p&gt;
&lt;p&gt;unix_timestamp:返回当前或指定时间的时间戳    &lt;/p&gt;
&lt;p&gt;from_unixtime：将时间戳转为日期格式&lt;/p&gt;
&lt;p&gt;current_date：当前日期&lt;/p&gt;
&lt;p&gt;current_timestamp：当前的日期加时间</summary>
      
    
    
    
    <category term="未分类" scheme="http://kiedeng.github.io/categories/%E6%9C%AA%E5%88%86%E7%B1%BB/"/>
    
    
    <category term="默认" scheme="http://kiedeng.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>HQL常见错误</title>
    <link href="http://kiedeng.github.io/2020/03/18/HQL%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF/"/>
    <id>http://kiedeng.github.io/2020/03/18/HQL%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF/</id>
    <published>2020-03-18T14:03:47.000Z</published>
    <updated>2020-03-18T15:13:59.298Z</updated>
    
    <content type="html"><![CDATA[<h3 id="行转列过程中"><a href="#行转列过程中" class="headerlink" title="行转列过程中"></a>行转列过程中</h3><p>分组的时候只写了group，忘记了by</p><p>子查询不能写分号</p><h3 id="列名错误："><a href="#列名错误：" class="headerlink" title="列名错误："></a><strong>列名错误：</strong></h3><pre class="line-numbers language-none"><code class="language-none">Error: Error while compiling statement: FAILED: SemanticException [Error 10004]: Line 3:6 Invalid table alias or column reference 'orderdata': (possible column names are: name, orderdate, cost) (state=42000,code=10004)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;行转列过程中&quot;&gt;&lt;a href=&quot;#行转列过程中&quot; class=&quot;headerlink&quot; title=&quot;行转列过程中&quot;&gt;&lt;/a&gt;行转列过程中&lt;/h3&gt;&lt;p&gt;分组的时候只写了group，忘记了by&lt;/p&gt;
&lt;p&gt;子查询不能写分号&lt;/p&gt;
&lt;h3 id=&quot;列名错误：&quot;</summary>
      
    
    
    
    <category term="hive" scheme="http://kiedeng.github.io/categories/hive/"/>
    
    
    <category term="默认" scheme="http://kiedeng.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>简介</title>
    <link href="http://kiedeng.github.io/2020/03/18/%E7%AE%80%E4%BB%8B/"/>
    <id>http://kiedeng.github.io/2020/03/18/%E7%AE%80%E4%BB%8B/</id>
    <published>2020-03-18T14:03:31.000Z</published>
    <updated>2021-03-05T14:09:02.462Z</updated>
    
    <content type="html"><![CDATA[<h1 id="教育"><a href="#教育" class="headerlink" title="教育"></a>教育</h1><p>2017.09.09 - 2021.06.06</p><ul><li><p>郑州轻工业大学</p></li><li><p>本科 计算机科学与技术</p></li><li><p>ACM集训队成员</p></li></ul><h1 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h1><p>数据的离线数据处理和实时处理</p><p>hadoop,  spark,linux, scala</p><h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><p>github：<a href="https://www.github.com/kiedeng">github</a></p><p>QQ:572245955</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;教育&quot;&gt;&lt;a href=&quot;#教育&quot; class=&quot;headerlink&quot; title=&quot;教育&quot;&gt;&lt;/a&gt;教育&lt;/h1&gt;&lt;p&gt;2017.09.09 - 2021.06.06&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;郑州轻工业大学&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;本科 计算</summary>
      
    
    
    
    <category term="成长" scheme="http://kiedeng.github.io/categories/%E6%88%90%E9%95%BF/"/>
    
    
    <category term="默认" scheme="http://kiedeng.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>mongdb导入json文件</title>
    <link href="http://kiedeng.github.io/2020/03/18/mongdb%E5%AF%BC%E5%85%A5json%E6%96%87%E4%BB%B6/"/>
    <id>http://kiedeng.github.io/2020/03/18/mongdb%E5%AF%BC%E5%85%A5json%E6%96%87%E4%BB%B6/</id>
    <published>2020-03-18T04:22:00.000Z</published>
    <updated>2020-03-18T04:29:16.461Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-安装mongdb"><a href="#1-安装mongdb" class="headerlink" title="1 安装mongdb"></a>1 安装mongdb</h2><p>使用宝塔安装mongdb</p><h2 id="2-配置mongdb"><a href="#2-配置mongdb" class="headerlink" title="2 配置mongdb"></a>2 配置mongdb</h2><p><img src="https://kiedeng.site/usr/uploads/2020/03/962950381.jpg" alt="配置.jpg"></p><p>注：开放27017端口</p><h2 id="3-导入数据"><a href="#3-导入数据" class="headerlink" title="3 导入数据"></a>3 导入数据</h2><p>mongoimport –db mall –collection userData –file /Users/yeo/Desktop/userdata.json</p><p>注：执行命令在/www/server/mongodb/bin</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-安装mongdb&quot;&gt;&lt;a href=&quot;#1-安装mongdb&quot; class=&quot;headerlink&quot; title=&quot;1 安装mongdb&quot;&gt;&lt;/a&gt;1 安装mongdb&lt;/h2&gt;&lt;p&gt;使用宝塔安装mongdb&lt;/p&gt;
&lt;h2 id=&quot;2-配置mongdb&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="mongdb" scheme="http://kiedeng.github.io/categories/mongdb/"/>
    
    
    <category term="默认" scheme="http://kiedeng.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>hive使用mysql编码问题</title>
    <link href="http://kiedeng.github.io/2020/03/17/hive%E4%BD%BF%E7%94%A8mysql%E7%BC%96%E7%A0%81%E9%97%AE%E9%A2%98/"/>
    <id>http://kiedeng.github.io/2020/03/17/hive%E4%BD%BF%E7%94%A8mysql%E7%BC%96%E7%A0%81%E9%97%AE%E9%A2%98/</id>
    <published>2020-03-17T10:58:22.000Z</published>
    <updated>2020-03-17T11:07:52.618Z</updated>
    
    <content type="html"><![CDATA[<h2 id="修改my-cnf文件"><a href="#修改my-cnf文件" class="headerlink" title="修改my.cnf文件"></a>修改my.cnf文件</h2><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"># 添加init_connect='SET collation_connection = utf8_unicode_ci'init_connect='SET NAMES utf8'character-set-server=utf8collation-server=utf8_unicode_ciskip-character-set-client-handshake<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>重启mysql</p><p>启动使用bin/hive脚本</p><h2 id="修改metastore数据库"><a href="#修改metastore数据库" class="headerlink" title="修改metastore数据库"></a>修改metastore数据库</h2><pre class="line-numbers language-none"><code class="language-none">show variables like 'char%';show variables like "colla%";<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>使用上面两个命令，查看是否都为utf8的编码，（除character_set _filesystem为binary）</p><p>如果没有：则</p><pre class="line-numbers language-none"><code class="language-none">修改表字段注解和表注解alter table COLUMNS_V2 modify column COMMENT varchar(256) character set utf8;alter table TABLE_PARAMS modify column PARAM_VALUE varchar(4000) character set utf8;修改分区字段注解：alter table PARTITION_PARAMS modify column PARAM_VALUE varchar(4000) character set utf8;alter table PARTITION_KEYS modify column PKEY_COMMENT varchar(4000) character set utf8;修改索引注解：alter table INDEX_PARAMS modify column PARAM_VALUE varchar(4000) character set utf8;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样就可以显示中文字符的，不过在hive中插入中文字符还有些问题，只能显示上传文档为中文字符和描述为中文字符的情况</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;修改my-cnf文件&quot;&gt;&lt;a href=&quot;#修改my-cnf文件&quot; class=&quot;headerlink&quot; title=&quot;修改my.cnf文件&quot;&gt;&lt;/a&gt;修改my.cnf文件&lt;/h2&gt;&lt;pre class=&quot;line-numbers language-xml&quot; da</summary>
      
    
    
    
    <category term="hive" scheme="http://kiedeng.github.io/categories/hive/"/>
    
    
    <category term="默认" scheme="http://kiedeng.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>mysql安装</title>
    <link href="http://kiedeng.github.io/2020/03/16/mysql%E5%AE%89%E8%A3%85/"/>
    <id>http://kiedeng.github.io/2020/03/16/mysql%E5%AE%89%E8%A3%85/</id>
    <published>2020-03-16T10:35:24.000Z</published>
    <updated>2020-03-16T11:32:24.560Z</updated>
    
    <content type="html"><![CDATA[<h2 id="检查是否安装Mysql"><a href="#检查是否安装Mysql" class="headerlink" title="检查是否安装Mysql"></a>检查是否安装Mysql</h2><pre class="line-numbers language-none"><code class="language-none">rpm -qa|grep mysql; // 查询是否存在mysqlrpm -e --nodeps mysql-libs; // 卸载mysql<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>rpm 是一个包管理工具</p><p>-e 卸载程序</p><p>-qa 查询安装的软件</p><p>–nodeps 不验证软件包的依赖</p><p>-i ,–install 安装软件包</p><p>-v， –verbose 提供更多的详细信息输出</p><p>-h ，–hash 软件包安装的时候列出哈希标记</p></blockquote><h2 id="安装Mysql"><a href="#安装Mysql" class="headerlink" title="安装Mysql"></a>安装Mysql</h2><pre class="line-numbers language-none"><code class="language-none">tar -xf mysql-5.7.28-1.el6.x86_64.rpm-bundle.tar // 解压// 安装[root@hadoop102 software]$ rpm -ivh mysql-community-common-5.7.28-1.el6.x86_64.rpm[root@hadoop102 software]$ rpm -ivh mysql-community-libs-5.7.28-1.el6.x86_64.rpm[root@hadoop102 software]$ rpm -ivh mysql-community-client-5.7.28-1.el6.x86_64.rpm[root@hadoop102 software]$ rpm -ivh mysql-community-server-5.7.28-1.el6.x86_64.rpm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="修改-etc-my-cnf"><a href="#修改-etc-my-cnf" class="headerlink" title="修改/etc/my.cnf"></a>修改/etc/my.cnf</h2><pre class="line-numbers language-none"><code class="language-none">[mysqld]explicit_defaults_for_timestamp=true  //显示指定默认值为timestamp类型的字段<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>删除/etc/my.cnf文件中datadir指向的目录下的所有内容:</p><h2 id="启动Mysql"><a href="#启动Mysql" class="headerlink" title="启动Mysql"></a>启动Mysql</h2><pre class="line-numbers language-none"><code class="language-none">// 初始化mysqld --initialize --user=mysql// 查看临时密码cat /var/log/mysqld.log // 启动mysql服务service mysqld start// 登陆mysql mysql -uroot -pEnter password:// 修改密码set password = password("新密码")// 修改root用户支持任意IP连接（在user表中）update user set host= ‘%’ where  user = ‘root’;flush privileges ; // 刷新配置<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;检查是否安装Mysql&quot;&gt;&lt;a href=&quot;#检查是否安装Mysql&quot; class=&quot;headerlink&quot; title=&quot;检查是否安装Mysql&quot;&gt;&lt;/a&gt;检查是否安装Mysql&lt;/h2&gt;&lt;pre class=&quot;line-numbers language-non</summary>
      
    
    
    
    <category term="Linux" scheme="http://kiedeng.github.io/categories/Linux/"/>
    
    
    <category term="默认" scheme="http://kiedeng.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>Hadoop_HA高可用</title>
    <link href="http://kiedeng.github.io/2020/03/08/Hadoop-HA%E9%AB%98%E5%8F%AF%E7%94%A8/"/>
    <id>http://kiedeng.github.io/2020/03/08/Hadoop-HA%E9%AB%98%E5%8F%AF%E7%94%A8/</id>
    <published>2020-03-08T05:52:37.000Z</published>
    <updated>2020-03-08T09:19:37.481Z</updated>
    
    <content type="html"><![CDATA[<p>包括HDFS的HA和YARN的HA</p><h2 id="HDFS-HA的工作机制"><a href="#HDFS-HA的工作机制" class="headerlink" title="HDFS-HA的工作机制"></a>HDFS-HA的工作机制</h2><p>​    通过双NameNode消除单节点故障</p><h2 id="手动故障转移"><a href="#手动故障转移" class="headerlink" title="手动故障转移"></a>手动故障转移</h2><p>配置：在opt目录下创建ha文件夹，将hadoop复制到ha文件夹下</p><p>配置hadoop-env.sh</p><pre class="line-numbers language-none"><code class="language-none">export JAVA_HOME=/opt/module/jdk1.8.0_144<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>配置core-site.xml</p><pre class="line-numbers language-none"><code class="language-none">&lt;configuration&gt;&lt;!-- 把两个NameNode）的地址组装成一个集群mycluster --&gt;&lt;property&gt;&lt;name&gt;fs.defaultFS&lt;/name&gt;        &lt;value&gt;hdfs://mycluster&lt;/value&gt;&lt;/property&gt;   &lt;!-- 声明journalnode服务器存储目录--&gt;&lt;property&gt;&lt;name&gt;dfs.journalnode.edits.dir&lt;/name&gt;&lt;value&gt;/opt/ha/hadoop-2.7.2/data/jn&lt;/value&gt;&lt;/property&gt;&lt;!-- 指定hadoop运行时产生文件的存储目录 --&gt;&lt;property&gt;&lt;name&gt;hadoop.tmp.dir&lt;/name&gt;&lt;value&gt;/opt/ha/hadoop-2.7.2/data/tmp&lt;/value&gt;&lt;/property&gt;&lt;/configuration&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>配置hdfs-site.xml</p><pre class="line-numbers language-none"><code class="language-none">&lt;configuration&gt;&lt;!-- 完全分布式集群名称 --&gt;&lt;property&gt;&lt;name&gt;dfs.nameservices&lt;/name&gt;&lt;value&gt;mycluster&lt;/value&gt;&lt;/property&gt;&lt;!-- 集群中NameNode节点都有哪些 --&gt;&lt;property&gt;&lt;name&gt;dfs.ha.namenodes.mycluster&lt;/name&gt;&lt;value&gt;nn1,nn2&lt;/value&gt;&lt;/property&gt;&lt;!-- nn1的RPC通信地址 --&gt;&lt;property&gt;&lt;name&gt;dfs.namenode.rpc-address.mycluster.nn1&lt;/name&gt;&lt;value&gt;hadoop102:9000&lt;/value&gt;&lt;/property&gt;&lt;!-- nn2的RPC通信地址 --&gt;&lt;property&gt;&lt;name&gt;dfs.namenode.rpc-address.mycluster.nn2&lt;/name&gt;&lt;value&gt;hadoop103:9000&lt;/value&gt;&lt;/property&gt;&lt;!-- nn1的http通信地址 --&gt;&lt;property&gt;&lt;name&gt;dfs.namenode.http-address.mycluster.nn1&lt;/name&gt;&lt;value&gt;hadoop102:50070&lt;/value&gt;&lt;/property&gt;&lt;!-- nn2的http通信地址 --&gt;&lt;property&gt;&lt;name&gt;dfs.namenode.http-address.mycluster.nn2&lt;/name&gt;&lt;value&gt;hadoop103:50070&lt;/value&gt;&lt;/property&gt;&lt;!-- 指定NameNode元数据在JournalNode上的存放位置 --&gt;&lt;property&gt;&lt;name&gt;dfs.namenode.shared.edits.dir&lt;/name&gt;&lt;value&gt;qjournal://hadoop102:8485;hadoop103:8485;hadoop104:8485/mycluster&lt;/value&gt;&lt;/property&gt;&lt;!-- 配置隔离机制，即同一时刻只能有一台服务器对外响应 --&gt;&lt;property&gt;&lt;name&gt;dfs.ha.fencing.methods&lt;/name&gt;&lt;value&gt;sshfence&lt;/value&gt;&lt;/property&gt;&lt;!-- 使用隔离机制时需要ssh无秘钥登录--&gt;&lt;property&gt;&lt;name&gt;dfs.ha.fencing.ssh.private-key-files&lt;/name&gt;&lt;value&gt;/home/atguigu/.ssh/id_rsa&lt;/value&gt;&lt;/property&gt;&lt;!-- 关闭权限检查--&gt;&lt;property&gt;&lt;name&gt;dfs.permissions.enable&lt;/name&gt;&lt;value&gt;false&lt;/value&gt;&lt;/property&gt;&lt;!-- 访问代理类：client，mycluster，active配置失败自动切换实现方式--&gt;&lt;property&gt;  &lt;name&gt;dfs.client.failover.proxy.provider.mycluster&lt;/name&gt;&lt;value&gt;org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider&lt;/value&gt;&lt;/property&gt;&lt;/configuration&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>拷贝到其他节点</p><h3 id="启动集群"><a href="#启动集群" class="headerlink" title="启动集群"></a>启动集群</h3><ol><li>各个集群启动JournalNode节点</li></ol><pre class="line-numbers language-none"><code class="language-none">sbin/hadoop-daemon.sh start journalnode<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="2"><li>在[nn1]上，对其格式化，并启动</li></ol><pre class="line-numbers language-none"><code class="language-none">bin/hdfs namenode -formatsbin/hadoop-daemon.sh start namenode<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ol start="3"><li>在[nn2]上，同步nn1的元数据信息</li></ol><pre class="line-numbers language-none"><code class="language-none">bin/hdfs namenode -bootstrapStandby<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="4"><li>启动[nn2]</li></ol><pre class="line-numbers language-none"><code class="language-none">sbin/hadoop-daemon.sh start namenode<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="5"><li>将[nn1]切换为Active</li></ol><pre class="line-numbers language-none"><code class="language-none">bin/hdfs haadmin -transitionToActive nn1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="6"><li>启动datanode</li></ol><pre class="line-numbers language-none"><code class="language-none">sbin/hadoop-daemons.sh start datanode<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="6"><li>查看是否Active</li></ol><pre class="line-numbers language-none"><code class="language-none">bin/hdfs haadmin -getServiceState nn1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="自动故障转移"><a href="#自动故障转移" class="headerlink" title="自动故障转移"></a>自动故障转移</h2><p>具体配置</p><p>（1）在hdfs-site.xml中增加</p><pre class="line-numbers language-none"><code class="language-none">&lt;property&gt;&lt;name&gt;dfs.ha.automatic-failover.enabled&lt;/name&gt;&lt;value&gt;true&lt;/value&gt;&lt;/property&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>（2）在core-site.xml文件中增加</p><pre class="line-numbers language-none"><code class="language-none">&lt;property&gt;&lt;name&gt;ha.zookeeper.quorum&lt;/name&gt;&lt;value&gt;hadoop102:2181,hadoop103:2181,hadoop104:2181&lt;/value&gt;&lt;/property&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>启动</p><p>（1）关闭所有HDFS服务：sbin/stop-dfs.sh</p><p>（2）启动Zookeeper集群：bin/zkServer.sh start</p><p>（3）初始化HA在Zookeeper中状态：bin/hdfs zkfc -formatZK</p><p>（4）启动HDFS服务：sbin/start-dfs.sh</p><p>集群规划：</p><table><thead><tr><th>hadoop102</th><th>hadoop103</th><th>hadoop104</th></tr></thead><tbody><tr><td>NameNode</td><td>NameNode</td><td></td></tr><tr><td>ZKFC</td><td>ZKFC</td><td></td></tr><tr><td>JournalNode</td><td>JournalNode</td><td>JournalNode</td></tr><tr><td>DataNode</td><td>DataNode</td><td>DataNode</td></tr><tr><td>ZK</td><td>ZK</td><td>ZK</td></tr><tr><td></td><td>ResourceManager</td><td></td></tr><tr><td>NodeManager</td><td>NodeManager</td><td>NodeManager</td></tr></tbody></table><h2 id="YARN-HA配置"><a href="#YARN-HA配置" class="headerlink" title="YARN-HA配置"></a>YARN-HA配置</h2><p>yarn-site.xml</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>yarn.nodemanager.aux-services<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>mapreduce_shuffle<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--启用resourcemanager ha--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>yarn.resourcemanager.ha.enabled<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>     <span class="token comment">&lt;!--声明两台resourcemanager的地址--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>yarn.resourcemanager.cluster-id<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>cluster-yarn1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>yarn.resourcemanager.ha.rm-ids<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>rm1,rm2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>yarn.resourcemanager.hostname.rm1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>hadoop102<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>yarn.resourcemanager.hostname.rm2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>hadoop103<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>     <span class="token comment">&lt;!--指定zookeeper集群的地址--&gt;</span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>yarn.resourcemanager.zk-address<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>hadoop102:2181,hadoop103:2181,hadoop104:2181<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--启用自动恢复--&gt;</span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>yarn.resourcemanager.recovery.enabled<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>     <span class="token comment">&lt;!--指定resourcemanager的状态信息存储在zookeeper集群--&gt;</span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>yarn.resourcemanager.store.class<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>启动YARN</p><p>（1）在hadoop102中执行：sbin/start-yarn.sh</p><p>（2）在hadoop103中执行：sbin/yarn-daemon.sh start resourcemanager</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;包括HDFS的HA和YARN的HA&lt;/p&gt;
&lt;h2 id=&quot;HDFS-HA的工作机制&quot;&gt;&lt;a href=&quot;#HDFS-HA的工作机制&quot; class=&quot;headerlink&quot; title=&quot;HDFS-HA的工作机制&quot;&gt;&lt;/a&gt;HDFS-HA的工作机制&lt;/h2&gt;&lt;p&gt;​    </summary>
      
    
    
    
    <category term="Hadoop" scheme="http://kiedeng.github.io/categories/Hadoop/"/>
    
    
    <category term="默认" scheme="http://kiedeng.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>shell脚本文件</title>
    <link href="http://kiedeng.github.io/2020/03/08/shell%E8%84%9A%E6%9C%AC%E6%96%87%E4%BB%B6/"/>
    <id>http://kiedeng.github.io/2020/03/08/shell%E8%84%9A%E6%9C%AC%E6%96%87%E4%BB%B6/</id>
    <published>2020-03-07T16:39:20.000Z</published>
    <updated>2020-03-07T16:41:48.903Z</updated>
    
    <content type="html"><![CDATA[<h2 id="myjps"><a href="#myjps" class="headerlink" title="myjps"></a>myjps</h2><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">#!/bin/bashfor i in hadoop102 hadoop103 hadoop104do    echo "************* $i Jps ***********"    ssh $i /opt/module/jdk1.8.0_144/bin/jpsdone<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="zookeeper集群管理脚本"><a href="#zookeeper集群管理脚本" class="headerlink" title="zookeeper集群管理脚本"></a>zookeeper集群管理脚本</h2><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">#!/bin/bashif [ $# -eq 0 ]then    echo "No args Input...."fifor i in hadoop102 hadoop103 hadoop104do    case $1 in    "start")        echo "*****************Start $i Zookeeper *************"        ssh $i /opt/module/zookeeper-3.4.10/bin/zkServer.sh start    ;;    "stop")                echo "*****************Stop $i Zookeeper *************"                ssh $i /opt/module/zookeeper-3.4.10/bin/zkServer.sh stop        ;;    "status")                echo "*****************Status $i Zookeeper *************"                ssh $i /opt/module/zookeeper-3.4.10/bin/zkServer.sh status        ;;    *)        echo "Input Args Error......"    esacdone<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="文件同步脚本"><a href="#文件同步脚本" class="headerlink" title="文件同步脚本"></a>文件同步脚本</h2><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">#!/bin/bash#1 获取输入参数个数，如果没有参数，直接退出pcount=$#if((pcount==0)); thenecho no args;exit;fi#2 获取文件名称p1=$1fname=`basename $p1`echo fname=$fname#3 获取上级目录到绝对路径pdir=`cd -P $(dirname $p1); pwd`echo pdir=$pdir#4 获取当前用户名称user=`whoami`#5 循环for((host=103; host&lt;105; host++)); do        echo ------------------- hadoop$host --------------        rsync -rvl $pdir/$fname $user@hadoop$host:$pdirdone<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;myjps&quot;&gt;&lt;a href=&quot;#myjps&quot; class=&quot;headerlink&quot; title=&quot;myjps&quot;&gt;&lt;/a&gt;myjps&lt;/h2&gt;&lt;pre class=&quot;line-numbers language-shell&quot; data-language=&quot;shell</summary>
      
    
    
    
    <category term="Linux" scheme="http://kiedeng.github.io/categories/Linux/"/>
    
    
    <category term="默认" scheme="http://kiedeng.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>shell操作</title>
    <link href="http://kiedeng.github.io/2020/03/07/shell%E6%93%8D%E4%BD%9C/"/>
    <id>http://kiedeng.github.io/2020/03/07/shell%E6%93%8D%E4%BD%9C/</id>
    <published>2020-03-07T09:28:34.000Z</published>
    <updated>2020-03-08T05:39:36.259Z</updated>
    
    <content type="html"><![CDATA[<p>更改权限：chmod 777 [sh文件]</p><h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><p>案例：创建文件，写入数据</p><pre class="line-numbers language-none"><code class="language-none">#!/bin/bashcd /home/atguigu/zzulitouch chuang.txtecho "kangdong" &gt;&gt; chuang.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Shell中的变量"><a href="#Shell中的变量" class="headerlink" title="Shell中的变量"></a>Shell中的变量</h2><h3 id="系统变量"><a href="#系统变量" class="headerlink" title="系统变量"></a>系统变量</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$HOME,$PWD,$SHELL,$USER等<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>全局变量：export A</p><h3 id="自定义变量"><a href="#自定义变量" class="headerlink" title="自定义变量"></a>自定义变量</h3><p>撤销变量：unset 变量</p><p>声明静态变量：readonly变量，注意：不能unset</p><h3 id="特殊变量-n"><a href="#特殊变量-n" class="headerlink" title="特殊变量:$ n"></a>特殊变量:$ n</h3><p>$n  （功能描述：n为数字，$0代表该脚本名称，$1-$9代表第一到第九个参数，十以上的参数，十以上的参数需要用大括号包含，如${10}）</p><h3 id="特殊变量："><a href="#特殊变量：" class="headerlink" title="特殊变量：$"></a>特殊变量：$</h3><p>获取所有输入参数个数，常用于循环</p><h3 id="特殊变量：-、"><a href="#特殊变量：-、" class="headerlink" title="特殊变量：$ *、$ @"></a>特殊变量：$ *、$ @</h3><p>​    $ *  （功能描述：这个变量代表命令行中所有的参数，$*把所有的参数看成一个整体）</p><p>​    $ @ （功能描述：这个变量也代表命令行中所有的参数，不过$@把每个参数区分对待）</p><h3 id="特殊变量：-1"><a href="#特殊变量：-1" class="headerlink" title="特殊变量：$ ?"></a>特殊变量：$ ?</h3><p>判断最后一次执行的命令的返回状态，0位成功，非0为失败</p><h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><ol><li><p>“$ ((运算式))”或“$[运算式]”</p></li><li><p>expr  + , - , *, /, %  加，减，乘，除，取余</p></li></ol><p>注意：expr运算符间要有空格</p><h2 id="条件判断"><a href="#条件判断" class="headerlink" title="条件判断"></a>条件判断</h2><p>格式：[condition]</p><p>判断条件：</p><ol><li><p>两个整数比较</p><p>-lt 小于（less than）    -le 小于或等于（less equal）</p><p>-eq等于（equal）        -gt大于（greater than）</p><p>-ge大于等于（greater equal）    -ne不等于（Not equal）</p></li><li><p>按照文件权限进行判断</p><p>-r 读    -w写    -x 执行（execute）</p></li><li><p>按照文件类型进行判断</p><p>-f 文件存在并且是一个常规文件</p><p>-e 文件存在 -d为目录</p></li></ol><h2 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h2><h3 id="1-if判断"><a href="#1-if判断" class="headerlink" title="1 if判断"></a>1 if判断</h3><pre class="line-numbers language-none"><code class="language-none">#!/bin/bashif [ $1 -eq "2" ]then        echo "2"elif [ $1 -eq "3" ]then        echo "3"fi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-case语句"><a href="#2-case语句" class="headerlink" title="2 case语句"></a>2 case语句</h3><p>注意事项：</p><ol><li><p>   case行尾必须为单词“in”，每一个模式匹配必须以右括号“）”结束。</p></li><li><p>   双分号“**;;**”表示命令序列结束，相当于java中的break。</p></li><li><p>   最后的“*）”表示默认模式，相当于java中的default。</p></li></ol><p>案例：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">#!/bin/bashcase $1 in"1")        echo "1 kangdong";;"2")        echo "2 kangdong";;"3")        echo "3 kangdong";;*)        echo "* kangdong";;esac<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-for循环"><a href="#3-for循环" class="headerlink" title="3 for循环"></a>3 for循环</h3><pre class="line-numbers language-none"><code class="language-none">#/bin/bashs=0for((i=0;i&lt;=100;i++))do        s=$[$s+$i]doneecho $s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-比较-与"><a href="#4-比较-与" class="headerlink" title="4 比较$ *与$ @"></a>4 比较$ *与$ @</h3><p>未被双引号包含时，都分开输出，当被双引号包含时，“$*”会将所有参数作为一个整体输出</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">#!/bin/bashfor i in "$*"do        echo "I am $i"donefor i in "$@"do        echo "My name $i"done<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-while循环"><a href="#5-while循环" class="headerlink" title="5 while循环"></a>5 while循环</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">#!/bin/bashs=0i=0while [ $i -le 100 ]do        s=$[$i+$s]        i=$[$i+1]doneecho $s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="read读取控制台输入"><a href="#read读取控制台输入" class="headerlink" title="read读取控制台输入"></a>read读取控制台输入</h2><p>read(选项)(参数)</p><p>​    选项：</p><p>-p：指定读取值时的提示符；</p><p>-t：指定读取值时等待的时间（秒）。</p><p>参数</p><p>​    变量：指定读取值的变量名</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">read -t 9 -p "输入值:" nameecho $name<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><h3 id="1-系统函数"><a href="#1-系统函数" class="headerlink" title="1 系统函数"></a>1 系统函数</h3><p><strong>basename [string / pathname] [suffix]</strong>     求文件名</p><p><strong>dirname</strong> ：求文件的目录</p><h3 id="2-自定义函数"><a href="#2-自定义函数" class="headerlink" title="2 自定义函数"></a>2 自定义函数</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">#!/bin/bashfunction sum(){        s=0        s=$[$1+$2]        echo $s}read -p "输入s1：" n1;read -p "输入s2: " n2;sum $n1 $n2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Shell工具"><a href="#Shell工具" class="headerlink" title="Shell工具"></a>Shell工具</h2><h3 id="cut"><a href="#cut" class="headerlink" title="cut"></a>cut</h3><p>cut [选项参数] filename</p><p>-f 列号    -d 分隔符</p><h3 id="sed"><a href="#sed" class="headerlink" title="sed"></a>sed</h3><h3 id="awk"><a href="#awk" class="headerlink" title="awk"></a>awk</h3><p>一个强大的文本分析工具，把文件逐行的读入，以空格为默认分隔符将每行切片，切开的部分再进行分析处理。</p><h3 id="sort"><a href="#sort" class="headerlink" title="sort"></a>sort</h3><h2 id="企业真实面试题（重点）"><a href="#企业真实面试题（重点）" class="headerlink" title="企业真实面试题（重点）"></a>企业真实面试题（重点）</h2><p>《未完，，待续》</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;更改权限：chmod 777 [sh文件]&lt;/p&gt;
&lt;h2 id=&quot;案例&quot;&gt;&lt;a href=&quot;#案例&quot; class=&quot;headerlink&quot; title=&quot;案例&quot;&gt;&lt;/a&gt;案例&lt;/h2&gt;&lt;p&gt;案例：创建文件，写入数据&lt;/p&gt;
&lt;pre class=&quot;line-numbers</summary>
      
    
    
    
    <category term="Linux" scheme="http://kiedeng.github.io/categories/Linux/"/>
    
    
    <category term="默认" scheme="http://kiedeng.github.io/tags/%E9%BB%98%E8%AE%A4/"/>
    
  </entry>
  
</feed>
